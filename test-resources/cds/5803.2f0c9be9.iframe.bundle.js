"use strict";(self.webpackChunk_carbon_react=self.webpackChunk_carbon_react||[]).push([[5803],{"./src/components/DatePicker/DatePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DatePicker_DatePicker});var prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("../../node_modules/react/index.js"),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),esm=__webpack_require__("../../node_modules/flatpickr/dist/esm/index.js"),l10n=__webpack_require__("../../node_modules/flatpickr/dist/l10n/index.js"),l10n_default=__webpack_require__.n(l10n),DatePickerInput=__webpack_require__("./src/components/DatePickerInput/index.ts");var match=__webpack_require__("./src/internal/keyboard/match.ts"),keys=__webpack_require__("./src/internal/keyboard/keys.ts");const fixEventsPlugin=config=>fp=>{const{inputFrom,inputTo,lastStartValue}=config,handleClickOutside=event=>{fp.isOpen&&!fp.calendarContainer.contains(event.target)&&event.target!==inputFrom&&event.target!==inputTo&&fp.close()},handleKeydown=event=>{const{target}=event;inputFrom!==target&&inputTo!==target||((0,match.Y)(event,keys.xy)?(fp.setDate([inputFrom.value,inputTo&&inputTo.value],!0,fp.config.dateFormat),event.stopPropagation()):(0,match.Y)(event,keys.nk)||(0,match.Y)(event,keys.Qp)?event.stopPropagation():(0,match.Y)(event,keys.yd)?(event.preventDefault(),fp.open()):fp.config.allowInput||(event.stopPropagation(),event.preventDefault()))},parseDateWithFormat=dateStr=>fp.parseDate(dateStr,fp.config.dateFormat),handleBlur=event=>{const{target}=event;if(inputTo===target&&fp.selectedDates[1]){const withoutTime=date=>date?.setHours(0,0,0,0),selectedToDate=withoutTime(new Date(fp.selectedDates[1])),currentValueToDate=withoutTime(parseDateWithFormat(inputTo.value));selectedToDate&&currentValueToDate&&selectedToDate!==currentValueToDate&&fp.setDate([inputFrom.value,inputTo&&inputTo.value],!0,fp.config.dateFormat)}const isValidDate=date=>"Invalid Date"!==date?.toString();inputTo===target&&1===fp.selectedDates.length&&inputTo.value&&isValidDate(parseDateWithFormat(inputTo.value))&&fp.setDate([inputFrom.value,inputTo.value],!0,fp.config.dateFormat),inputTo===target&&!inputFrom.value&&lastStartValue.current&&isValidDate(parseDateWithFormat(lastStartValue.current))&&(inputFrom.value=lastStartValue.current,inputTo.value&&fp.setDate([inputFrom.value,inputTo.value],!0,fp.config.dateFormat))},release=()=>{const{inputFrom,inputTo}=config;inputTo&&(inputTo.removeEventListener("keydown",handleKeydown,!0),inputTo.removeEventListener("blur",handleBlur,!0)),inputFrom.removeEventListener("keydown",handleKeydown,!0),document.removeEventListener("click",handleClickOutside,!0)};return{onReady:[()=>{fp.loadedPlugins.push("carbonFlatpickrFixEventsPlugin")},()=>{release();const{inputFrom,inputTo}=config;inputFrom.addEventListener("keydown",handleKeydown,!0),inputTo&&(inputTo.addEventListener("keydown",handleKeydown,!0),inputTo.addEventListener("blur",handleBlur,!0)),document.addEventListener("click",handleClickOutside,!0)}],onDestroy:[release]}};var rangePlugin=__webpack_require__("../../node_modules/flatpickr/dist/plugins/rangePlugin.js"),rangePlugin_default=__webpack_require__.n(rangePlugin);const plugins_rangePlugin=config=>{const factory=rangePlugin_default()(Object.assign({position:"left"},config));return fp=>{const origSetDate=fp.setDate,origRangePlugin=factory(fp),{onReady:origOnReady}=origRangePlugin;return Object.assign(origRangePlugin,{onReady:[()=>{fp.setDate=function setDate(dates,triggerChange,format){if(origSetDate.call(this,dates,triggerChange,format),!triggerChange&&2===dates.length){const{_input:inputFrom}=fp,{input:inputTo}=config;[inputFrom,inputTo].forEach(((input,i)=>{input&&(input.value=dates[i]?fp.formatDate(new Date(dates[i]),fp.config.dateFormat):"")}))}}},origOnReady],onPreCalendarPosition(){}})}};var deprecate=__webpack_require__("./src/prop-types/deprecate.ts"),usePrefix=__webpack_require__("./src/internal/usePrefix.ts");const useSavedCallback=callback=>{const savedCallback=(0,react.useRef)(callback);return(0,react.useEffect)((()=>{savedCallback.current=callback}),[callback]),(0,react.useCallback)(((...args)=>savedCallback.current?savedCallback.current(...args):void 0),[])};var FormContext=__webpack_require__("./src/components/FluidForm/FormContext.ts"),bucket_19=__webpack_require__("../icons-react/es/generated/bucket-19.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const forEach=Array.prototype.forEach,monthToStr=(monthNumber,shorthand,locale)=>locale.months[shorthand?"shorthand":"longhand"][monthNumber],carbonFlatpickrMonthSelectPlugin=config=>fp=>{const updateCurrentMonth=()=>{if(fp.monthElements){const monthStr=monthToStr(fp.currentMonth,!0===config.shorthand,fp.l10n);fp.yearElements.forEach((elem=>{const currentMonthContainer=elem.closest(config.selectorFlatpickrMonthYearContainer);Array.prototype.forEach.call(currentMonthContainer.querySelectorAll(".cur-month"),(monthElement=>{monthElement.textContent=monthStr}))}))}};return{onMonthChange:updateCurrentMonth,onValueUpdate:updateCurrentMonth,onOpen:updateCurrentMonth,onReady:[()=>{fp.monthElements&&(fp.monthElements.forEach((elem=>{elem.parentNode&&elem.parentNode.removeChild(elem)})),fp.monthElements.splice(0,fp.monthElements.length,...fp.monthElements.map((()=>{const monthElement=fp._createElement("span",config.classFlatpickrCurrentMonth);return monthElement.textContent=monthToStr(fp.currentMonth,!0===config.shorthand,fp.l10n),fp.yearElements[0].closest(config.selectorFlatpickrMonthYearContainer).insertBefore(monthElement,fp.yearElements[0].closest(config.selectorFlatpickrYearContainer)),monthElement}))))},updateCurrentMonth,()=>{fp.loadedPlugins.push("carbonFlatpickrMonthSelectPlugin")}]}};function isLabelTextEmpty(children){return children.every((child=>!child.props.labelText))}function updateClassNames(calendar,prefix){const calendarContainer=calendar.calendarContainer,daysContainer=calendar.days;calendarContainer&&daysContainer&&(calendarContainer.classList.add(`${prefix}--date-picker__calendar`),calendarContainer.querySelector(".flatpickr-month").classList.add(`${prefix}--date-picker__month`),calendarContainer.querySelector(".flatpickr-weekdays").classList.add(`${prefix}--date-picker__weekdays`),calendarContainer.querySelector(".flatpickr-days").classList.add(`${prefix}--date-picker__days`),forEach.call(calendarContainer.querySelectorAll(".flatpickr-weekday"),(item=>{const currentItem=item;currentItem.innerHTML=currentItem.innerHTML.replace(/\s+/g,""),currentItem.classList.add(`${prefix}--date-picker__weekday`)})),forEach.call(daysContainer.querySelectorAll(".flatpickr-day"),(item=>{item.classList.add(`${prefix}--date-picker__day`),item.setAttribute("role","button"),item.classList.contains("today")&&calendar.selectedDates.length>0?item.classList.add("no-border"):item.classList.contains("today")&&0===calendar.selectedDates.length&&item.classList.remove("no-border")})))}const DatePicker=react.forwardRef((function DatePicker({allowInput,appendTo,children,className,closeOnSelect=!0,dateFormat="m/d/Y",datePickerType,disable,enable,inline,invalid,invalidText,warn,warnText,light=!1,locale="en",maxDate,minDate,onChange,onClose,onOpen,readOnly=!1,short=!1,value,parseDate:parseDateProp,...rest},ref){const prefix=(0,usePrefix.M)(),{isFluid}=(0,react.useContext)(FormContext.c),[hasInput,setHasInput]=(0,react.useState)(!1),startInputField=(0,react.useCallback)((node=>{null!==node&&(startInputField.current=node,setHasInput(!0))}),[]),lastStartValue=(0,react.useRef)(""),calendarRef=(0,react.useRef)(null),[calendarCloseEvent,setCalendarCloseEvent]=(0,react.useState)(null),handleCalendarClose=(0,react.useCallback)(((selectedDates,dateStr,instance)=>{lastStartValue.current&&selectedDates[0]&&!startInputField.current.value&&(startInputField.current.value=lastStartValue.current,calendarRef.current?.setDate([startInputField.current.value,endInputField?.current?.value],!0,calendarRef.current.config.dateFormat)),onClose&&onClose(selectedDates,dateStr,instance)}),[onClose]),onCalendarClose=(selectedDates,dateStr,instance,e)=>{e&&"clickOutside"===e.type||setCalendarCloseEvent({selectedDates,dateStr,instance})};(0,react.useEffect)((()=>{if(calendarCloseEvent){const{selectedDates,dateStr,instance}=calendarCloseEvent;handleCalendarClose(selectedDates,dateStr,instance),setCalendarCloseEvent(null)}}),[calendarCloseEvent,handleCalendarClose]);const endInputField=(0,react.useRef)(null),lastFocusedField=(0,react.useRef)(null),savedOnChange=useSavedCallback(onChange),savedOnOpen=useSavedCallback(onOpen),datePickerClasses=classnames_default()(`${prefix}--date-picker`,{[`${prefix}--date-picker--short`]:short,[`${prefix}--date-picker--light`]:light,[`${prefix}--date-picker--simple`]:"simple"===datePickerType,[`${prefix}--date-picker--single`]:"single"===datePickerType,[`${prefix}--date-picker--range`]:"range"===datePickerType,[`${prefix}--date-picker--nolabel`]:"range"===datePickerType&&isLabelTextEmpty(children)}),wrapperClasses=classnames_default()(`${prefix}--form-item`,{[String(className)]:className}),childrenWithProps=react.Children.toArray(children).map(((child,index)=>0===index&&child.type===react.createElement(DatePickerInput.A,child.props).type?react.cloneElement(child,{datePickerType,ref:startInputField,readOnly}):1===index&&child.type===react.createElement(DatePickerInput.A,child.props).type?react.cloneElement(child,{datePickerType,ref:endInputField,readOnly}):0===index?react.cloneElement(child,{ref:startInputField,readOnly}):1===index?react.cloneElement(child,{ref:endInputField,readOnly}):void 0));let fluidError;return(0,react.useEffect)((()=>{!function initializeWeekdayShorthand(){l10n_default()?.en?.weekdays?.shorthand&&l10n_default().en.weekdays.shorthand.forEach(((_day,index)=>{const currentDay=l10n_default().en.weekdays.shorthand;"Thu"===currentDay[index]||"Th"===currentDay[index]?currentDay[index]="Th":currentDay[index]=currentDay[index].charAt(0)}))}()}),[]),(0,react.useEffect)((()=>{if("single"!==datePickerType&&"range"!==datePickerType)return;if(!startInputField.current)return;const onHook=(_electedDates,_dateStr,instance)=>{updateClassNames(instance,prefix),startInputField?.current&&(startInputField.current.readOnly=readOnly),endInputField?.current&&(endInputField.current.readOnly=readOnly)},enableOrDisable=enable?"enable":"disable";let enableOrDisableArr,localeData,parseDate;if(enableOrDisableArr=enable||disable?enable||disable:[],"object"==typeof locale){const location=locale.locale?locale.locale:"en";localeData={...l10n_default()[location],...locale}}else localeData=l10n_default()[locale];parseDateProp||"m/d/Y"!==dateFormat?parseDateProp&&(parseDate=parseDateProp):parseDate=date=>{const month=date.split("/")[0]<=12&&date.split("/")[0]>0?parseInt(date.split("/")[0]):1,year=parseInt(date.split("/")[2]);if(month&&year){const daysInMonth=new Date(year,month,0).getDate(),day=date.split("/")[1]<=daysInMonth&&date.split("/")[1]>0?parseInt(date.split("/")[1]):1;return new Date(`${year}/${month}/${day}`)}return!1};const{current:start}=startInputField,{current:end}=endInputField,flatpickerConfig={inline:inline??!1,onClose:onCalendarClose,disableMobile:!0,defaultDate:value,closeOnSelect,mode:datePickerType,allowInput:allowInput??!0,dateFormat,locale:localeData,[enableOrDisable]:enableOrDisableArr,minDate,maxDate,parseDate,plugins:["range"===datePickerType?plugins_rangePlugin({input:endInputField.current}):()=>{},appendTo?(config={appendTo},fp=>({appendTo:config.appendTo,onReady:()=>{fp.loadedPlugins.push("carbonFlatpickrAppendToPlugin")},onPreCalendarPosition:()=>{Promise.resolve().then((()=>{const{calendarContainer,config:fpConfig,_positionElement:positionElement}=fp,appendTo=fpConfig.appendTo;if(!appendTo)throw new Error("[appendToPlugin] Missing `appendTo` element.");const{left:containerLeft,top:containerTop}=appendTo.getBoundingClientRect(),{left:refLeft,bottom:refBottom}=positionElement.getBoundingClientRect();if((appendTo!==appendTo.ownerDocument.body||0!==containerLeft||0!==containerTop)&&"static"===appendTo.ownerDocument.defaultView?.getComputedStyle(appendTo).getPropertyValue("position"))throw new Error("Floating menu container must not have `position: static`.");calendarContainer.style.top=refBottom-containerTop+2+"px",calendarContainer.style.left=refLeft-containerLeft+"px"}))}})):()=>{},carbonFlatpickrMonthSelectPlugin({selectorFlatpickrMonthYearContainer:".flatpickr-current-month",selectorFlatpickrYearContainer:".numInputWrapper",selectorFlatpickrCurrentMonth:".cur-month",classFlatpickrCurrentMonth:"cur-month"}),fixEventsPlugin({inputFrom:startInputField.current,inputTo:endInputField.current,lastStartValue})],clickOpens:!readOnly,noCalendar:readOnly,nextArrow:'<svg width="16px" height="16px" viewBox="0 0 16 16">\n  <polygon points="11,8 6,13 5.3,12.3 9.6,8 5.3,3.7 6,3 "/>\n</svg>',prevArrow:'<svg width="16px" height="16px" viewBox="0 0 16 16">\n  <polygon points="5,8 10,3 10.7,3.7 6.4,8 10.7,12.3 10,13 "/>\n</svg>',onChange:(...args)=>{readOnly||savedOnChange(...args)},onReady:onHook,onMonthChange:onHook,onYearChange:onHook,onOpen:(...args)=>{onHook(...args),savedOnOpen(...args)},onValueUpdate:onHook};var config;const calendar=(0,esm.A)(start,flatpickerConfig);calendarRef.current=calendar;const handleInputFieldKeyDown=event=>{const{calendarContainer,selectedDateElem:fpSelectedDateElem,todayDateElem:fpTodayDateElem}=calendar;if((0,match.Y)(event,keys.uf)&&calendarContainer.classList.remove("open"),(0,match.Y)(event,keys.oz))if(event.shiftKey)calendarRef.current?.isOpen&&event.target===startInputField.current&&(calendarRef.current.close(),onCalendarClose(calendarRef.current.selectedDates,"",calendarRef.current,event));else{event.preventDefault(),calendarContainer.classList.add("open");const selectedDateElem=calendarContainer.querySelector(".selected")&&fpSelectedDateElem,todayDateElem=calendarContainer.querySelector(".today")&&fpTodayDateElem;(selectedDateElem||todayDateElem||calendarContainer.querySelector(".flatpickr-day[tabindex]")||calendarContainer).focus(),event.target===startInputField.current?lastFocusedField.current=startInputField.current:event.target===endInputField.current&&(lastFocusedField.current=endInputField.current)}},handleCalendarKeyDown=event=>{if(!calendarRef.current||!startInputField.current)return;const lastInputField="range"==datePickerType?endInputField.current:startInputField.current;(0,match.Y)(event,keys.oz)&&(event.shiftKey?(event.preventDefault(),(lastFocusedField.current||startInputField.current).focus()):lastFocusedField.current===lastInputField?(lastInputField.focus(),calendarRef.current.close(),onCalendarClose(calendarRef.current.selectedDates,"",calendarRef.current,event)):(event.preventDefault(),lastInputField.focus()))};function handleOnChange(event){const{target}=event;target===start&&(lastStartValue.current=start.value),""===start.value&&calendar.selectedDates&&calendar.selectedDates.length}function handleKeyPress(event){(0,match.Y)(event,keys.xy)&&closeOnSelect&&"single"==datePickerType&&calendar.calendarContainer.classList.remove("open")}return start&&(start.addEventListener("keydown",handleInputFieldKeyDown),start.addEventListener("change",handleOnChange),start.addEventListener("keypress",handleKeyPress),calendar&&calendar.calendarContainer&&(calendar.calendarContainer.setAttribute("role","application"),calendar.calendarContainer.setAttribute("aria-label","calendar-container"))),end&&(end.addEventListener("keydown",handleInputFieldKeyDown),end.addEventListener("change",handleOnChange),end.addEventListener("keypress",handleKeyPress)),calendar.calendarContainer&&calendar.calendarContainer.addEventListener("keydown",handleCalendarKeyDown),()=>{calendar&&calendar.destroy&&calendar.destroy(),value&&(startInputField?.current&&(startInputField.current.value=""),endInputField?.current&&(endInputField.current.value="")),start&&(start.removeEventListener("keydown",handleInputFieldKeyDown),start.removeEventListener("change",handleOnChange),start.removeEventListener("keypress",handleKeyPress)),end&&(end.removeEventListener("keydown",handleInputFieldKeyDown),end.removeEventListener("change",handleOnChange),end.removeEventListener("keypress",handleKeyPress)),calendar.calendarContainer&&calendar.calendarContainer.removeEventListener("keydown",handleCalendarKeyDown)}}),[savedOnChange,savedOnOpen,readOnly,closeOnSelect,hasInput,datePickerType]),(0,react.useImperativeHandle)(ref,(()=>({get calendar(){return calendarRef.current}}))),(0,react.useEffect)((()=>{calendarRef.current?.set&&calendarRef.current.set({dateFormat})}),[dateFormat]),(0,react.useEffect)((()=>{calendarRef.current?.set&&calendarRef.current.set("minDate",minDate)}),[minDate]),(0,react.useEffect)((()=>{calendarRef.current?.set&&calendarRef.current.set("allowInput",allowInput)}),[allowInput]),(0,react.useEffect)((()=>{calendarRef.current?.set&&calendarRef.current.set("maxDate",maxDate)}),[maxDate]),(0,react.useEffect)((()=>{calendarRef.current?.set&&disable&&calendarRef.current.set("disable",disable)}),[disable]),(0,react.useEffect)((()=>{calendarRef.current?.set&&enable&&calendarRef.current.set("enable",enable)}),[enable]),(0,react.useEffect)((()=>{calendarRef.current?.set&&inline&&calendarRef.current.set("inline",inline)}),[inline]),(0,react.useEffect)((()=>{(!value||Array.isArray(value)&&value.every((date=>!date)))&&calendarRef.current?.selectedDates.length&&(calendarRef.current?.clear(),startInputField.current&&(startInputField.current.value=""),endInputField.current&&(endInputField.current.value=""))}),[value]),(0,react.useEffect)((()=>{let isMouseDown=!1;const handleMouseDown=event=>{!calendarRef.current||!calendarRef.current.isOpen||calendarRef.current.calendarContainer.contains(event.target)||startInputField.current.contains(event.target)||endInputField.current?.contains(event.target)||(isMouseDown=!0,closeCalendar(event))},closeCalendar=event=>{calendarRef.current?.close(),onCalendarClose(calendarRef.current?.selectedDates,"",calendarRef.current,{type:"clickOutside"})};return document.addEventListener("mousedown",handleMouseDown,!0),()=>{document.removeEventListener("mousedown",handleMouseDown,!0)}}),[calendarRef,startInputField,endInputField,onCalendarClose]),(0,react.useEffect)((()=>{calendarRef.current?.set?(void 0!==value&&calendarRef.current.setDate(value),updateClassNames(calendarRef.current,prefix)):!calendarRef.current&&value&&(startInputField.current.value=value)}),[value,prefix]),isFluid&&(invalid&&(fluidError=react.createElement(react.Fragment,null,react.createElement(bucket_19.BF,{className:`${prefix}--date-picker__icon ${prefix}--date-picker__icon--invalid`}),react.createElement("hr",{className:`${prefix}--date-picker__divider`}),react.createElement("div",{className:`${prefix}--form-requirement`},invalidText))),warn&&!invalid&&(fluidError=react.createElement(react.Fragment,null,react.createElement(bucket_19.OR,{className:`${prefix}--date-picker__icon ${prefix}--date-picker__icon--warn`}),react.createElement("hr",{className:`${prefix}--date-picker__divider`}),react.createElement("div",{className:`${prefix}--form-requirement`},warnText)))),react.createElement("div",_extends({className:wrapperClasses,ref},rest),react.createElement("div",{className:datePickerClasses},childrenWithProps),fluidError)}));DatePicker.propTypes={allowInput:prop_types_default().bool,appendTo:prop_types_default().object,children:prop_types_default().node,className:prop_types_default().string,closeOnSelect:prop_types_default().bool,dateFormat:prop_types_default().string,datePickerType:prop_types_default().oneOf(["simple","single","range"]),disable:prop_types_default().array,enable:prop_types_default().array,inline:prop_types_default().bool,invalid:prop_types_default().bool,invalidText:prop_types_default().node,light:(0,deprecate.C)(prop_types_default().bool,"The `light` prop for `DatePicker` has been deprecated in favor of the new `Layer` component. It will be removed in the next major release."),locale:prop_types_default().oneOfType([prop_types_default().object,prop_types_default().oneOf(["ar","at","az","be","bg","bn","bs","cat","cs","cy","da","de","en","eo","es","et","fa","fi","fo","fr","ga","gr","he","hi","hr","hu","id","is","it","ja","ka","km","ko","kz","lt","lv","mk","mn","ms","my","nl","no","pa","pl","pt","ro","ru","si","sk","sl","sq","sr","sv","th","tr","uk","uz","uz_latn","vn","zh_tw","zh"])]),maxDate:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),minDate:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),onChange:prop_types_default().func,onClose:prop_types_default().func,onOpen:prop_types_default().func,parseDate:prop_types_default().func,readOnly:prop_types_default().oneOfType([prop_types_default().bool,prop_types_default().array]),short:prop_types_default().bool,value:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().arrayOf(prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number,prop_types_default().object])),prop_types_default().object,prop_types_default().number]),warn:prop_types_default().bool,warnText:prop_types_default().node};const DatePicker_DatePicker=DatePicker;DatePicker.__docgenInfo={description:"",methods:[{name:"calendar",docblock:null,modifiers:["get"],params:[],returns:null}],displayName:"DatePicker",props:{allowInput:{required:!1,tsType:{name:"boolean"},description:'Flatpickr prop passthrough enables direct date input, and when set to false,\nwe must clear dates manually by resetting the value prop to to a falsy value (such as `""`, `null`, or `undefined`) or an array of all falsy values, making it a controlled input.',type:{name:"bool"}},appendTo:{required:!1,tsType:{name:"HTMLElement"},description:"The DOM element the flatpickr should be inserted into `<body>` by default.",type:{name:"object"}},children:{required:!1,tsType:{name:"union",raw:"ReactNode | object",elements:[{name:"ReactNode"},{name:"object"}]},description:"The child nodes.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"The CSS class names.",type:{name:"string"}},closeOnSelect:{required:!1,tsType:{name:"boolean"},description:"flatpickr prop passthrough. Controls whether the calendar dropdown closes upon selection.",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},dateFormat:{required:!1,tsType:{name:"string"},description:"The date format.",defaultValue:{value:"'m/d/Y'",computed:!1},type:{name:"string"}},datePickerType:{required:!1,tsType:{name:"union",raw:"'simple' | 'single' | 'range'",elements:[{name:"literal",value:"'simple'"},{name:"literal",value:"'single'"},{name:"literal",value:"'range'"}]},description:"The type of the date picker:\n\n* `simple` - Without calendar dropdown.\n* `single` - With calendar dropdown and single date.\n* `range` - With calendar dropdown and a date range.",type:{name:"enum",value:[{value:"'simple'",computed:!1},{value:"'single'",computed:!1},{value:"'range'",computed:!1}]}},disable:{required:!1,tsType:{name:"Array",elements:[{name:"DateLimit",elements:[{name:"DateOption"}],raw:"DateLimit<DateOption>"}],raw:"DateLimit<DateOption>[]"},description:"The flatpickr `disable` option that allows a user to disable certain dates.",type:{name:"array"}},enable:{required:!1,tsType:{name:"Array",elements:[{name:"DateLimit",elements:[{name:"DateOption"}],raw:"DateLimit<DateOption>"}],raw:"DateLimit<DateOption>[]"},description:"The flatpickr `enable` option that allows a user to enable certain dates.",type:{name:"array"}},inline:{required:!1,tsType:{name:"boolean"},description:"The flatpickr `inline` option.",type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not the control is invalid (Fluid only)",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactNode"},description:"Provide the text that is displayed when the control is in error state (Fluid Only)",type:{name:"node"}},light:{required:!1,tsType:{name:"boolean"},description:"`true` to use the light version.",defaultValue:{value:"false",computed:!1},type:{name:"custom",raw:"deprecate(\n  PropTypes.bool,\n  'The `light` prop for `DatePicker` has ' +\n    'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'\n)"}},locale:{required:!1,tsType:{name:"union",raw:"| string\n| any\n| 'ar' // Arabic\n| 'at' // Austria\n| 'az' // Azerbaijan\n| 'be' // Belarusian\n| 'bg' // Bulgarian\n| 'bn' // Bangla\n| 'bs' // Bosnia\n| 'cat' // Catalan\n| 'cs' // Czech\n| 'cy' // Welsh\n| 'da' // Danish\n| 'de' // German\n| 'en' // English\n| 'eo' // Esperanto\n| 'es' // Spanish\n| 'et' // Estonian\n| 'fa' // Persian\n| 'fi' // Finnish\n| 'fo' // Faroese\n| 'fr' // French\n| 'ga' // Gaelic\n| 'gr' // Greek\n| 'he' // Hebrew\n| 'hi' // Hindi\n| 'hr' // Croatian\n| 'hu' // Hungarian\n| 'id' // Indonesian\n| 'is' // Icelandic\n| 'it' // Italian\n| 'ja' // Japanese\n| 'ka' // Georgian\n| 'km' // Khmer\n| 'ko' // Korean\n| 'kz' // Kazakh\n| 'lt' // Lithuanian\n| 'lv' // Latvian\n| 'mk' // Macedonian\n| 'mn' // Mongolian\n| 'ms' // Malaysian\n| 'my' // Burmese\n| 'nl' // Dutch\n| 'no' // Norwegian\n| 'pa' // Punjabi\n| 'pl' // Polish\n| 'pt' // Portuguese\n| 'ro' // Romanian\n| 'ru' // Russian\n| 'si' // Sinhala\n| 'sk' // Slovak\n| 'sl' // Slovenian\n| 'sq' // Albanian\n| 'sr' // Serbian\n| 'sv' // Swedish\n| 'th' // Thai\n| 'tr' // Turkish\n| 'uk' // Ukrainian\n| 'uz' // Uzbek\n| 'uz_latn' // Uzbek Latin\n| 'vn' // Vietnamese\n| 'zh_tw' // Mandarin Traditional\n| 'zh'\n| undefined",elements:[{name:"string"},{name:"any"},{name:"literal",value:"'ar'"},{name:"literal",value:"'at'"},{name:"literal",value:"'az'"},{name:"literal",value:"'be'"},{name:"literal",value:"'bg'"},{name:"literal",value:"'bn'"},{name:"literal",value:"'bs'"},{name:"literal",value:"'cat'"},{name:"literal",value:"'cs'"},{name:"literal",value:"'cy'"},{name:"literal",value:"'da'"},{name:"literal",value:"'de'"},{name:"literal",value:"'en'"},{name:"literal",value:"'eo'"},{name:"literal",value:"'es'"},{name:"literal",value:"'et'"},{name:"literal",value:"'fa'"},{name:"literal",value:"'fi'"},{name:"literal",value:"'fo'"},{name:"literal",value:"'fr'"},{name:"literal",value:"'ga'"},{name:"literal",value:"'gr'"},{name:"literal",value:"'he'"},{name:"literal",value:"'hi'"},{name:"literal",value:"'hr'"},{name:"literal",value:"'hu'"},{name:"literal",value:"'id'"},{name:"literal",value:"'is'"},{name:"literal",value:"'it'"},{name:"literal",value:"'ja'"},{name:"literal",value:"'ka'"},{name:"literal",value:"'km'"},{name:"literal",value:"'ko'"},{name:"literal",value:"'kz'"},{name:"literal",value:"'lt'"},{name:"literal",value:"'lv'"},{name:"literal",value:"'mk'"},{name:"literal",value:"'mn'"},{name:"literal",value:"'ms'"},{name:"literal",value:"'my'"},{name:"literal",value:"'nl'"},{name:"literal",value:"'no'"},{name:"literal",value:"'pa'"},{name:"literal",value:"'pl'"},{name:"literal",value:"'pt'"},{name:"literal",value:"'ro'"},{name:"literal",value:"'ru'"},{name:"literal",value:"'si'"},{name:"literal",value:"'sk'"},{name:"literal",value:"'sl'"},{name:"literal",value:"'sq'"},{name:"literal",value:"'sr'"},{name:"literal",value:"'sv'"},{name:"literal",value:"'th'"},{name:"literal",value:"'tr'"},{name:"literal",value:"'uk'"},{name:"literal",value:"'uz'"},{name:"literal",value:"'uz_latn'"},{name:"literal",value:"'vn'"},{name:"literal",value:"'zh_tw'"},{name:"literal",value:"'zh'"},{name:"undefined"}]},description:"The language locale used to format the days of the week, months, and numbers. The full list of supported locales can be found here https://github.com/flatpickr/flatpickr/tree/master/src/l10n",defaultValue:{value:"'en'",computed:!1},type:{name:"union",value:[{name:"object"},{name:"enum",value:[{value:"'ar'",computed:!1},{value:"'at'",computed:!1},{value:"'az'",computed:!1},{value:"'be'",computed:!1},{value:"'bg'",computed:!1},{value:"'bn'",computed:!1},{value:"'bs'",computed:!1},{value:"'cat'",computed:!1},{value:"'cs'",computed:!1},{value:"'cy'",computed:!1},{value:"'da'",computed:!1},{value:"'de'",computed:!1},{value:"'en'",computed:!1},{value:"'eo'",computed:!1},{value:"'es'",computed:!1},{value:"'et'",computed:!1},{value:"'fa'",computed:!1},{value:"'fi'",computed:!1},{value:"'fo'",computed:!1},{value:"'fr'",computed:!1},{value:"'ga'",computed:!1},{value:"'gr'",computed:!1},{value:"'he'",computed:!1},{value:"'hi'",computed:!1},{value:"'hr'",computed:!1},{value:"'hu'",computed:!1},{value:"'id'",computed:!1},{value:"'is'",computed:!1},{value:"'it'",computed:!1},{value:"'ja'",computed:!1},{value:"'ka'",computed:!1},{value:"'km'",computed:!1},{value:"'ko'",computed:!1},{value:"'kz'",computed:!1},{value:"'lt'",computed:!1},{value:"'lv'",computed:!1},{value:"'mk'",computed:!1},{value:"'mn'",computed:!1},{value:"'ms'",computed:!1},{value:"'my'",computed:!1},{value:"'nl'",computed:!1},{value:"'no'",computed:!1},{value:"'pa'",computed:!1},{value:"'pl'",computed:!1},{value:"'pt'",computed:!1},{value:"'ro'",computed:!1},{value:"'ru'",computed:!1},{value:"'si'",computed:!1},{value:"'sk'",computed:!1},{value:"'sl'",computed:!1},{value:"'sq'",computed:!1},{value:"'sr'",computed:!1},{value:"'sv'",computed:!1},{value:"'th'",computed:!1},{value:"'tr'",computed:!1},{value:"'uk'",computed:!1},{value:"'uz'",computed:!1},{value:"'uz_latn'",computed:!1},{value:"'vn'",computed:!1},{value:"'zh_tw'",computed:!1},{value:"'zh'",computed:!1}]}]}},maxDate:{required:!1,tsType:{name:"DateOption"},description:"The maximum date that a user can pick to.",type:{name:"union",value:[{name:"string"},{name:"number"}]}},minDate:{required:!1,tsType:{name:"DateOption"},description:"The minimum date that a user can start picking from.",type:{name:"union",value:[{name:"string"},{name:"number"}]}},onChange:{required:!1,tsType:{name:"flatpickr.Options.Hook"},description:"The `change` event handler.",type:{name:"func"}},onClose:{required:!1,tsType:{name:"flatpickr.Options.Hook"},description:"The `close` event handler.",type:{name:"func"}},onOpen:{required:!1,tsType:{name:"flatpickr.Options.Hook"},description:"The `open` event handler.",type:{name:"func"}},parseDate:{required:!1,tsType:{name:"signature",type:"function",raw:"(date: string) => Date | false",signature:{arguments:[{type:{name:"string"},name:"date"}],return:{name:"union",raw:"Date | false",elements:[{name:"Date"},{name:"literal",value:"false"}]}}},description:"flatpickr prop passthrough. Controls how dates are parsed.",type:{name:"func"}},readOnly:{required:!1,tsType:{name:"union",raw:"boolean | [] | any | undefined",elements:[{name:"boolean"},{name:"tuple",raw:"[]",elements:[]},{name:"any"},{name:"undefined"}]},description:"whether the DatePicker is to be readOnly\nif boolean applies to all inputs\nif array applies to each input in order",defaultValue:{value:"false",computed:!1},type:{name:"union",value:[{name:"bool"},{name:"array"}]}},short:{required:!1,tsType:{name:"boolean"},description:"`true` to use the short version.",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},value:{required:!1,tsType:{name:"union",raw:"DateOption | DateOption[]",elements:[{name:"DateOption"},{name:"Array",elements:[{name:"DateOption"}],raw:"DateOption[]"}]},description:"The value of the date value provided to flatpickr, could\nbe a date, a date number, a date string, an array of dates.",type:{name:"union",value:[{name:"string"},{name:"arrayOf",value:{name:"union",value:[{name:"string"},{name:"number"},{name:"object"}]}},{name:"object"},{name:"number"}]}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state (Fluid only)",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactNode"},description:"Provide the text that is displayed when the control is in warning state (Fluid only)",type:{name:"node"}}}}},"./src/components/DatePicker/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/DatePicker/DatePicker.tsx").A},"./src/components/DatePickerInput/DatePickerInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _carbon_icons_react__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../icons-react/es/generated/bucket-19.js"),_carbon_icons_react__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../icons-react/es/generated/bucket-2.js"),classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),prop_types__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_8__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts"),_FluidForm__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FluidForm/FormContext.ts"),_internal_useId__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/internal/useId.js"),_Text__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Text/Text.tsx"),_prop_types_deprecate__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/prop-types/deprecate.ts"),_AILabel__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/AILabel/index.tsx"),_internal__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/internal/utils.ts");const DatePickerInput=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((function DatePickerInput(props,ref){const{datePickerType,decorator,disabled=!1,helperText,hideLabel,id,invalid=!1,invalidText,labelText,onClick=()=>{},onChange=()=>{},pattern="\\d{1,2}\\/\\d{1,2}\\/\\d{4}",placeholder,size="md",slug,type="text",warn,warnText,...rest}=props,prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),{isFluid}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_FluidForm__WEBPACK_IMPORTED_MODULE_3__.c),datePickerInputInstanceId=(0,_internal_useId__WEBPACK_IMPORTED_MODULE_4__.Bi)(),datePickerInputProps={id,onChange:event=>{disabled||onChange(event)},onClick:event=>{disabled||onClick(event)},pattern,placeholder,type};const wrapperClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()(`${prefix}--date-picker-input__wrapper`,{[`${prefix}--date-picker-input__wrapper--invalid`]:invalid,[`${prefix}--date-picker-input__wrapper--warn`]:warn,[`${prefix}--date-picker-input__wrapper--slug`]:slug,[`${prefix}--date-picker-input__wrapper--decorator`]:decorator}),labelClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()(`${prefix}--label`,{[`${prefix}--visually-hidden`]:hideLabel,[`${prefix}--label--disabled`]:disabled,[`${prefix}--label--readonly`]:rest.readOnly}),helperTextClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()(`${prefix}--form__helper-text`,{[`${prefix}--form__helper-text--disabled`]:disabled}),inputClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()(`${prefix}--date-picker__input`,{[`${prefix}--date-picker__input--${size}`]:size,[`${prefix}--date-picker__input--invalid`]:invalid,[`${prefix}--date-picker__input--warn`]:warn}),containerClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()(`${prefix}--date-picker-container`,{[`${prefix}--date-picker--nolabel`]:!labelText,[`${prefix}--date-picker--fluid--invalid`]:isFluid&&invalid,[`${prefix}--date-picker--fluid--warn`]:isFluid&&warn}),datePickerInputHelperId=helperText?`datepicker-input-helper-text-${datePickerInputInstanceId}`:void 0,inputProps={...rest,...datePickerInputProps,className:inputClasses,disabled,ref,"aria-describedby":helperText?datePickerInputHelperId:void 0};invalid&&(inputProps["data-invalid"]=!0);const input=react__WEBPACK_IMPORTED_MODULE_1__.createElement("input",inputProps),candidate=slug??decorator,normalizedDecorator=(0,_internal__WEBPACK_IMPORTED_MODULE_5__.Y)(candidate,_AILabel__WEBPACK_IMPORTED_MODULE_6__.td)?(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(candidate,{size:"mini"}):null;return react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:containerClasses},labelText&&react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Text__WEBPACK_IMPORTED_MODULE_7__.E,{as:"label",htmlFor:id,className:labelClasses},labelText),react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:wrapperClasses},react__WEBPACK_IMPORTED_MODULE_1__.createElement("span",null,input,slug?normalizedDecorator:decorator?react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:`${prefix}--date-picker-input-inner-wrapper--decorator`},normalizedDecorator):"",isFluid&&react__WEBPACK_IMPORTED_MODULE_1__.createElement(DatePickerIcon,{datePickerType}),react__WEBPACK_IMPORTED_MODULE_1__.createElement(DatePickerIcon,{datePickerType,invalid,warn}))),invalid&&react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,isFluid&&react__WEBPACK_IMPORTED_MODULE_1__.createElement("hr",{className:`${prefix}--date-picker__divider`}),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Text__WEBPACK_IMPORTED_MODULE_7__.E,{as:"div",className:`${prefix}--form-requirement`},invalidText)),warn&&react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,isFluid&&react__WEBPACK_IMPORTED_MODULE_1__.createElement("hr",{className:`${prefix}--date-picker__divider`}),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Text__WEBPACK_IMPORTED_MODULE_7__.E,{as:"div",className:`${prefix}--form-requirement`},warnText)),helperText&&!invalid&&react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Text__WEBPACK_IMPORTED_MODULE_7__.E,{as:"div",id:datePickerInputHelperId,className:helperTextClasses},helperText))}));function DatePickerIcon({datePickerType,invalid,warn}){const prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),{isFluid}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_FluidForm__WEBPACK_IMPORTED_MODULE_3__.c);return"simple"!==datePickerType||invalid||warn||isFluid?invalid?react__WEBPACK_IMPORTED_MODULE_1__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_10__.BF,{className:`${prefix}--date-picker__icon ${prefix}--date-picker__icon--invalid`}):!invalid&&warn?react__WEBPACK_IMPORTED_MODULE_1__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_10__.OR,{className:`${prefix}--date-picker__icon ${prefix}--date-picker__icon--warn`}):react__WEBPACK_IMPORTED_MODULE_1__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_11__.Vv,{className:`${prefix}--date-picker__icon`,role:"img","aria-hidden":"true"}):null}DatePickerInput.propTypes={datePickerType:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["simple","single","range"]),decorator:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,disabled:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,helperText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,hideLabel:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,id:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string.isRequired,invalid:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,labelText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_8___default().func,onClick:prop_types__WEBPACK_IMPORTED_MODULE_8___default().func,pattern:(props,propName,componentName)=>{if(void 0!==props[propName])try{new RegExp(props[propName])}catch(e){return new Error(`Invalid value of prop '${propName}' supplied to '${componentName}', it should be a valid regular expression`)}},placeholder:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,size:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["sm","md","lg"]),slug:(0,_prop_types_deprecate__WEBPACK_IMPORTED_MODULE_9__.C)(prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,"The `slug` prop has been deprecated and will be removed in the next major version. Use the decorator prop instead."),type:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,warn:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node},DatePickerIcon.propTypes={datePickerType:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["simple","single","range"]),invalid:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,warn:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool};const __WEBPACK_DEFAULT_EXPORT__=DatePickerInput;DatePickerInput.__docgenInfo={description:"",methods:[],displayName:"DatePickerInput",props:{datePickerType:{required:!1,tsType:{name:"union",raw:"'simple' | 'single' | 'range'",elements:[{name:"literal",value:"'simple'"},{name:"literal",value:"'single'"},{name:"literal",value:"'range'"}]},description:"The type of the date picker:\n\n* `simple` - Without calendar dropdown.\n* `single` - With calendar dropdown and single date.\n* `range` - With calendar dropdown and a date range.",type:{name:"enum",value:[{value:"'simple'",computed:!1},{value:"'single'",computed:!1},{value:"'range'",computed:!1}]}},decorator:{required:!1,tsType:{name:"ReactNode"},description:"**Experimental**: Provide a `decorator` component to be rendered inside the `DatePickerInput` component",type:{name:"node"}},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not the input should be disabled",type:{name:"bool"}},helperText:{required:!1,tsType:{name:"union",raw:"| ReactElementLike\n| ReadonlyArray<ReactNode>\n| string\n| number\n| boolean\n| null\n| undefined",elements:[{name:"ReactElementLike"},{name:"ReadonlyArray",elements:[{name:"ReactNode"}],raw:"ReadonlyArray<ReactNode>"},{name:"string"},{name:"number"},{name:"boolean"},{name:"null"},{name:"undefined"}]},description:"Provide text that is used alongside the control label for additional help",type:{name:"node"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Specify if the label should be hidden",type:{name:"bool"}},id:{required:!0,tsType:{name:"string"},description:"Specify an id that uniquely identifies the `<input>`",type:{name:"string"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not the input should be invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"union",raw:"| ReactElementLike\n| ReadonlyArray<ReactNode>\n| string\n| number\n| boolean\n| null\n| undefined",elements:[{name:"ReactElementLike"},{name:"ReadonlyArray",elements:[{name:"ReactNode"}],raw:"ReadonlyArray<ReactNode>"},{name:"string"},{name:"number"},{name:"boolean"},{name:"null"},{name:"undefined"}]},description:"Specify the text to be rendered when the input is invalid",type:{name:"node"}},labelText:{required:!0,tsType:{name:"union",raw:"| ReactElementLike\n| ReadonlyArray<ReactNode>\n| string\n| number\n| boolean\n| null\n| undefined",elements:[{name:"ReactElementLike"},{name:"ReadonlyArray",elements:[{name:"ReactNode"}],raw:"ReadonlyArray<ReactNode>"},{name:"string"},{name:"number"},{name:"boolean"},{name:"null"},{name:"undefined"}]},description:"Provide the text that will be read by a screen reader when visiting this\ncontrol",type:{name:"node"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(...args: any[]) => any",signature:{arguments:[{type:{name:"Array",elements:[{name:"any"}],raw:"any[]"},name:"args",rest:!0}],return:{name:"any"}}},description:"Specify an `onChange` handler that is called whenever a change in the\ninput field has occurred",type:{name:"func"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(...args: any[]) => any",signature:{arguments:[{type:{name:"Array",elements:[{name:"any"}],raw:"any[]"},name:"args",rest:!0}],return:{name:"any"}}},description:"Provide a function to be called when the input field is clicked",type:{name:"func"}},pattern:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  props: { [key: string]: any },\n  propName: string,\n  componentName: string\n) => null | any | Error",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"props"},{type:{name:"string"},name:"propName"},{type:{name:"string"},name:"componentName"}],return:{name:"union",raw:"null | any | Error",elements:[{name:"null"},{name:"any"},{name:"Error"}]}}},description:"Provide a regular expression that the input value must match\nTODO:need to be rewritten",type:{name:"custom",raw:"(props, propName, componentName): null | any | Error => {\n  if (props[propName] === undefined) {\n    return;\n  }\n  try {\n    new RegExp(props[propName]);\n  } catch (e) {\n    return new Error(\n      `Invalid value of prop '${propName}' supplied to '${componentName}', it should be a valid regular expression`\n    );\n  }\n}"}},placeholder:{required:!1,tsType:{name:"string"},description:"Specify the placeholder text",type:{name:"string"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"whether the DatePicker is to be readOnly",type:{name:"bool"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Specify the size of the Date Picker Input. Currently supports either `sm`, `md`, or `lg` as an option.",type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},slug:{required:!1,tsType:{name:"union",raw:"| ReactElementLike\n| ReadonlyArray<ReactNode>\n| string\n| number\n| boolean\n| null\n| undefined",elements:[{name:"ReactElementLike"},{name:"ReadonlyArray",elements:[{name:"ReactNode"}],raw:"ReadonlyArray<ReactNode>"},{name:"string"},{name:"number"},{name:"boolean"},{name:"null"},{name:"undefined"}]},description:"@deprecated please use decorator instead.\n**Experimental**: Provide a `Slug` component to be rendered inside the `DatePickerInput` component",type:{name:"custom",raw:"deprecate(\n  PropTypes.node,\n  'The `slug` prop has been deprecated and will be removed in the next major version. Use the decorator prop instead.'\n)"}},type:{required:!1,tsType:{name:"string"},description:"Specify the type of the `<input>`",type:{name:"string"}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"union",raw:"| ReactElementLike\n| ReadonlyArray<ReactNode>\n| string\n| number\n| boolean\n| null\n| undefined",elements:[{name:"ReactElementLike"},{name:"ReadonlyArray",elements:[{name:"ReactNode"}],raw:"ReadonlyArray<ReactNode>"},{name:"string"},{name:"number"},{name:"boolean"},{name:"null"},{name:"undefined"}]},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}}},composes:["Omit"]}},"./src/components/DatePickerInput/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/DatePickerInput/DatePickerInput.tsx").A},"./src/components/FluidDatePicker/FluidDatePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_DatePicker__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/DatePicker/index.tsx"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts"),_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FluidForm/FormContext.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidDatePicker=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((function FluidDatePicker({className,children,invalid,invalidText,readOnly,warn,warnText,...other},ref){const prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),classNames=classnames__WEBPACK_IMPORTED_MODULE_0___default()(className,{[`${prefix}--date-picker--fluid`]:!0,[`${prefix}--date-picker--fluid--invalid`]:invalid,[`${prefix}--date-picker--fluid--readonly`]:readOnly,[`${prefix}--date-picker--fluid--warn`]:warn});return react__WEBPACK_IMPORTED_MODULE_1__.createElement(_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__.c.Provider,{value:{isFluid:!0}},react__WEBPACK_IMPORTED_MODULE_1__.createElement(_DatePicker__WEBPACK_IMPORTED_MODULE_4__.Ay,_extends({invalid,invalidText,readOnly,warn,warnText,className:classNames,ref},other),children))}));FluidDatePicker.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,className:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,invalid:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,warn:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node};const __WEBPACK_DEFAULT_EXPORT__=FluidDatePicker;FluidDatePicker.__docgenInfo={description:"",methods:[],displayName:"FluidDatePicker",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The child node(s)",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the outer FluidForm wrapper",type:{name:"string"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not the control is invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in error state",type:{name:"node"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether the input should be read-only",type:{name:"bool"}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}}}}},"./src/components/FluidDatePickerInput/FluidDatePickerInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_DatePickerInput__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/DatePickerInput/index.ts"),_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/FluidForm/FormContext.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidDatePickerInput=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_1__.c.Provider,{value:{isFluid:!0}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DatePickerInput__WEBPACK_IMPORTED_MODULE_2__.A,_extends({ref},props)))));FluidDatePickerInput.propTypes=_DatePickerInput__WEBPACK_IMPORTED_MODULE_2__.A.propTypes;const __WEBPACK_DEFAULT_EXPORT__=FluidDatePickerInput;FluidDatePickerInput.__docgenInfo={description:"",methods:[],displayName:"FluidDatePickerInput",props:{datePickerType:{description:"The type of the date picker:\n\n* `simple` - Without calendar dropdown.\n* `single` - With calendar dropdown and single date.\n* `range` - With calendar dropdown and a date range.",type:{name:"enum",value:[{value:"'simple'",computed:!1},{value:"'single'",computed:!1},{value:"'range'",computed:!1}]},required:!1},decorator:{description:"**Experimental**: Provide a decorator component to be rendered inside the `RadioButton` component",type:{name:"node"},required:!1},disabled:{description:"Specify whether or not the input should be disabled",type:{name:"bool"},required:!1},helperText:{description:"Provide text that is used alongside the control label for additional help",type:{name:"node"},required:!1},hideLabel:{description:"Specify if the label should be hidden",type:{name:"bool"},required:!1},id:{description:"Specify an id that uniquely identifies the `<input>`",type:{name:"string"},required:!0},invalid:{description:"Specify whether or not the input should be invalid",type:{name:"bool"},required:!1},invalidText:{description:"Specify the text to be rendered when the input is invalid",type:{name:"node"},required:!1},labelText:{description:"Provide the text that will be read by a screen reader when visiting this\ncontrol",type:{name:"node"},required:!0},onChange:{description:"Specify an `onChange` handler that is called whenever a change in the\ninput field has occurred",type:{name:"func"},required:!1},onClick:{description:"Provide a function to be called when the input field is clicked",type:{name:"func"},required:!1},pattern:{description:"Provide a regular expression that the input value must match",type:{name:"custom",raw:"(props, propName, componentName): null | any | Error => {\n  if (props[propName] === undefined) {\n    return;\n  }\n  try {\n    new RegExp(props[propName]);\n  } catch (e) {\n    return new Error(\n      `Invalid value of prop '${propName}' supplied to '${componentName}', it should be a valid regular expression`\n    );\n  }\n}"},required:!1},placeholder:{description:"Specify the placeholder text",type:{name:"string"},required:!1},readOnly:{description:"whether the DatePicker is to be readOnly",type:{name:"bool"},required:!1},size:{description:"Specify the size of the Date Picker Input. Currently supports either `sm`, `md`, or `lg` as an option.",type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]},required:!1},slug:{description:"",type:{name:"custom",raw:"deprecate(\n  PropTypes.node,\n  'The `slug` prop has been deprecated and will be removed in the next major version. Use the decorator prop instead.'\n)"},required:!1},type:{description:"Specify the type of the `<input>`",type:{name:"string"},required:!1},warn:{description:"Specify whether the control is currently in warning state",type:{name:"bool"},required:!1},warnText:{description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"},required:!1}}}}}]);