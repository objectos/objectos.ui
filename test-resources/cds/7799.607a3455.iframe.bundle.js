"use strict";(self.webpackChunk_carbon_react=self.webpackChunk_carbon_react||[]).push([[7799],{"./src/components/OverflowMenu/OverflowMenu.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ob:()=>OverflowMenu,Ay:()=>OverflowMenu_OverflowMenu});var react=__webpack_require__("../../node_modules/react/index.js"),bucket_13=__webpack_require__("../icons-react/es/generated/bucket-13.js"),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=(__webpack_require__("../../node_modules/invariant/browser.js"),__webpack_require__("../../node_modules/prop-types/index.js")),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("../feature-flags/es/index.js"),react_dom=__webpack_require__("../../node_modules/react-dom/index.js"),lib=__webpack_require__("../../node_modules/window-or-global/lib/index.js"),lib_default=__webpack_require__.n(lib),match=__webpack_require__("./src/internal/keyboard/match.ts"),keys=__webpack_require__("./src/internal/keyboard/keys.ts");const OptimizedResize=(()=>{const callbacks=[];let running=!1;const runCallbacks=()=>{callbacks.forEach((callback=>{callback()})),running=!1},handleResize=()=>{running||(running=!0,lib_default().requestAnimationFrame(runCallbacks))};return{add:callback=>(callbacks.length||lib_default().addEventListener("resize",handleResize),(callback=>{callbacks.indexOf(callback)<0&&callbacks.push(callback)})(callback),{remove:()=>{const index=callbacks.indexOf(callback);index>=0&&callbacks.splice(index,1)}})}})();var navigation=__webpack_require__("./src/internal/keyboard/navigation.ts"),usePrefix=__webpack_require__("./src/internal/usePrefix.ts"),wrapFocus=__webpack_require__("./src/internal/wrapFocus.ts");const DIRECTION_LEFT="left",DIRECTION_TOP="top",DIRECTION_RIGHT="right",DIRECTION_BOTTOM="bottom",FloatingMenu=({children,flipped,focusTrap,menuDirection="bottom",menuOffset={top:0,left:0},menuRef:externalMenuRef,onPlace,selectorPrimaryFocus,styles,target=()=>document.body,triggerRef,updateOrientation})=>{const prefix=(0,react.useContext)(usePrefix.s),[floatingPosition,setFloatingPosition]=(0,react.useState)(void 0),menuBodyRef=(0,react.useRef)(null),startSentinelRef=(0,react.useRef)(null),endSentinelRef=(0,react.useRef)(null),placeInProgressRef=(0,react.useRef)(!1),updateMenuPosition=(0,react.useCallback)((isAdjustment=>{const menuBody=menuBodyRef.current;if(!menuBody)return;const triggerEl=triggerRef.current,menuSize=menuBody.getBoundingClientRect(),refPosition=triggerEl?triggerEl.getBoundingClientRect():void 0,offsetValue="function"==typeof menuOffset?menuOffset(menuBody,menuDirection,triggerEl,flipped):menuOffset;if(updateOrientation&&updateOrientation({menuSize,refPosition,direction:menuDirection,offset:offsetValue,scrollX:lib_default().pageXOffset,scrollY:lib_default().pageYOffset,container:{rect:target().getBoundingClientRect(),position:getComputedStyle(target()).position}}),menuSize.width>0&&menuSize.height>0||!offsetValue){const newFloatingPosition=(({menuSize,refPosition,offset,direction,scrollX,scrollY,container})=>{const{left:refLeft=0,top:refTop=0,right:refRight=0,bottom:refBottom=0}=refPosition,effectiveScrollX="static"!==container.position?0:scrollX,effectiveScrollY="static"!==container.position?0:scrollY,relativeDiff_top="static"!==container.position?container.rect.top:0,relativeDiff_left="static"!==container.position?container.rect.left:0,{width,height}=menuSize,{top=0,left=0}=offset,refCenterHorizontal=(refLeft+refRight)/2,refCenterVertical=(refTop+refBottom)/2;return{[DIRECTION_LEFT]:()=>({left:refLeft-width+effectiveScrollX-left-relativeDiff_left,top:refCenterVertical-height/2+effectiveScrollY+top-9-relativeDiff_top}),[DIRECTION_TOP]:()=>({left:refCenterHorizontal-width/2+effectiveScrollX+left-relativeDiff_left,top:refTop-height+effectiveScrollY-top-relativeDiff_top}),[DIRECTION_RIGHT]:()=>({left:refRight+effectiveScrollX+left-relativeDiff_left,top:refCenterVertical-height/2+effectiveScrollY+top+3-relativeDiff_top}),[DIRECTION_BOTTOM]:()=>({left:refCenterHorizontal-width/2+effectiveScrollX+left-relativeDiff_left,top:refBottom+effectiveScrollY+top-relativeDiff_top})}[direction]()})({menuSize,refPosition:refPosition??{left:0,top:0,right:0,bottom:0},offset:offsetValue,direction:menuDirection,scrollX:lib_default().pageXOffset,scrollY:lib_default().pageYOffset,container:{rect:target().getBoundingClientRect(),position:getComputedStyle(target()).position}});if(floatingPosition&&floatingPosition.left===newFloatingPosition.left&&floatingPosition.top===newFloatingPosition.top||setFloatingPosition(newFloatingPosition),!isAdjustment){const newMenuSize=menuBody.getBoundingClientRect();newMenuSize.width===menuSize.width&&newMenuSize.height===menuSize.height||updateMenuPosition(!0)}}}),[triggerRef,menuOffset,menuDirection,flipped,target,updateOrientation,floatingPosition]),handleMenuRef=node=>{menuBodyRef.current=node,placeInProgressRef.current=!!node,externalMenuRef&&externalMenuRef(node),node&&updateMenuPosition()};(0,react.useEffect)((()=>{placeInProgressRef.current&&floatingPosition&&menuBodyRef.current&&(menuBodyRef.current.contains(document.activeElement)||(menuBody=>{const primaryFocusNode=selectorPrimaryFocus?menuBody.querySelector(selectorPrimaryFocus):null,tabbableNode=menuBody.querySelector(navigation.Bx),focusableNode=menuBody.querySelector(navigation.Id);(primaryFocusNode||tabbableNode||focusableNode||menuBody).focus()})(menuBodyRef.current),"function"==typeof onPlace&&onPlace(menuBodyRef.current),placeInProgressRef.current=!1)}),[floatingPosition,onPlace]),(0,react.useEffect)((()=>{const resizeHandler=OptimizedResize.add((()=>{updateMenuPosition()}));return()=>{resizeHandler.remove()}}),[triggerRef,menuOffset,menuDirection,flipped,target,updateOrientation]),(0,react.useEffect)((()=>{updateMenuPosition()}),[menuOffset,menuDirection,flipped,triggerRef,target,updateOrientation]);const handleBlur=event=>{const{target,relatedTarget}=event;menuBodyRef.current&&startSentinelRef.current&&endSentinelRef.current&&target instanceof HTMLElement&&relatedTarget instanceof HTMLElement&&(0,wrapFocus.Vp)({bodyNode:menuBodyRef.current,startTrapNode:startSentinelRef.current,endTrapNode:endSentinelRef.current,currentActiveNode:relatedTarget,oldActiveNode:target})},handleKeyDown=event=>{(0,match.Y)(event,keys.oz)&&menuBodyRef.current&&event.target instanceof HTMLElement&&(0,wrapFocus.MG)({containerNode:menuBodyRef.current,currentActiveNode:event.target,event})},focusTrapWithoutSentinels=es.Sn("enable-experimental-focus-wrap-without-sentinels");if("undefined"!=typeof document){const portalTarget=target?target():document.body;return react_dom.createPortal(react.createElement("div",{onBlur:focusTrap&&!focusTrapWithoutSentinels?handleBlur:void 0,onKeyDown:focusTrapWithoutSentinels?handleKeyDown:void 0},!focusTrapWithoutSentinels&&react.createElement("span",{ref:startSentinelRef,tabIndex:0,role:"link",className:`${prefix}--visually-hidden`},"Focus sentinel"),(()=>{const pos=floatingPosition,positioningStyle=pos?{left:`${pos.left}px`,top:`${pos.top}px`,right:"auto"}:{visibility:"hidden",top:"0px"},child=children;return(0,react.cloneElement)(child,{ref:handleMenuRef,style:{...styles,...positioningStyle,position:"absolute",opacity:1}})})(),!focusTrapWithoutSentinels&&react.createElement("span",{ref:endSentinelRef,tabIndex:0,role:"link",className:`${prefix}--visually-hidden`},"Focus sentinel")),portalTarget)}return null};var noopFn=__webpack_require__("./src/internal/noopFn.ts"),deprecate=__webpack_require__("./src/prop-types/deprecate.ts"),mergeRefs=__webpack_require__("./src/tools/mergeRefs.js"),setupGetInstanceId=__webpack_require__("./src/tools/setupGetInstanceId.ts"),IconButton=__webpack_require__("./src/components/IconButton/index.tsx"),useOutsideClick=__webpack_require__("./src/internal/useOutsideClick.ts"),deprecateValuesWithin=__webpack_require__("./src/prop-types/deprecateValuesWithin.js"),mapPopoverAlign=__webpack_require__("./src/tools/mapPopoverAlign.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const getInstanceId=(0,setupGetInstanceId.Y)(),triggerButtonPositionProps={[DIRECTION_TOP]:"bottom",[DIRECTION_BOTTOM]:"top"},getMenuOffset=(menuBody,direction,trigger,flip)=>{const triggerButtonPositionProp=triggerButtonPositionProps[direction];const{offsetWidth:menuWidth,offsetHeight:menuHeight}=menuBody;switch(triggerButtonPositionProp){case"top":case"bottom":return{left:(flip?-1:1)*(menuWidth/2-(trigger?trigger.offsetWidth:0)/2),top:0};default:return{left:0,top:0}}},OverflowMenu=(0,react.forwardRef)((({align,"aria-label":ariaLabel=null,ariaLabel:deprecatedAriaLabel,children,className,direction="bottom",flipped=!1,focusTrap=!0,iconClass,iconDescription="Options",id,light,menuOffset=getMenuOffset,menuOffsetFlip=getMenuOffset,menuOptionsClass,onClick=noopFn.H,onClose=noopFn.H,onOpen=noopFn.H,open:openProp,renderIcon:IconElement=bucket_13.CH,selectorPrimaryFocus="[data-floating-menu-primary-focus]",size="md",innerRef,...other},ref)=>{const prefix=(0,react.useContext)(usePrefix.s),[open,setOpen]=(0,react.useState)(openProp??!1),[click,setClick]=(0,react.useState)(!1),[hasMountedTrigger,setHasMountedTrigger]=(0,react.useState)(!1),hFocusIn=(0,react.useRef)(null),instanceId=(0,react.useRef)(getInstanceId()),menuBodyRef=(0,react.useRef)(null),menuItemRefs=(0,react.useRef)({}),prevOpenProp=(0,react.useRef)(openProp),prevOpenState=(0,react.useRef)(open),triggerRef=(0,react.useRef)(null),wrapperRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{prevOpenProp.current!==openProp&&(setOpen(!!openProp),prevOpenProp.current=openProp)}),[openProp]),(0,react.useEffect)((()=>{triggerRef.current&&setHasMountedTrigger(!0)}),[]),(0,react.useEffect)((()=>{open&&!prevOpenState.current?onOpen():!open&&prevOpenState.current&&onClose(),prevOpenState.current=open}),[open,onClose,onOpen]),(0,useOutsideClick.j)(wrapperRef,(({target})=>{open&&(!menuBodyRef.current||target instanceof Node&&!menuBodyRef.current.contains(target))&&closeMenu()}));const focusMenuEl=(0,react.useCallback)((()=>{triggerRef.current&&triggerRef.current.focus()}),[]),closeMenu=(0,react.useCallback)((onCloseMenu=>{setOpen(!1),onCloseMenu&&onCloseMenu(),onClose()}),[onClose]),closeMenuAndFocus=(0,react.useCallback)((()=>{const wasClicked=click,wasOpen=open;closeMenu((()=>{wasOpen&&!wasClicked&&focusMenuEl()}))}),[click,open,closeMenu,focusMenuEl]),closeMenuOnEscape=(0,react.useCallback)((()=>{const wasOpen=open;closeMenu((()=>{wasOpen&&focusMenuEl()}))}),[open,closeMenu,focusMenuEl]),handleOverflowMenuItemFocus=({currentIndex=0,direction})=>{const enabledIndices=react.Children.toArray(children).reduce(((acc,curr,i)=>(react.isValidElement(curr)&&!curr.props.disabled&&acc.push(i),acc)),[]),nextValidIndex=(()=>{const nextIndex=enabledIndices.indexOf(currentIndex)+direction;switch(nextIndex){case-1:return enabledIndices.length-1;case enabledIndices.length:return 0;default:return nextIndex}})(),overflowMenuItem=menuItemRefs.current[enabledIndices[nextValidIndex]];overflowMenuItem?.focus()},menuBodyId=`overflow-menu-${instanceId.current}__menu-body`,overflowMenuClasses=classnames_default()(className,`${prefix}--overflow-menu`,{[`${prefix}--overflow-menu--open`]:open,[`${prefix}--overflow-menu--light`]:light,[`${prefix}--overflow-menu--${size}`]:size}),overflowMenuOptionsClasses=classnames_default()(menuOptionsClass,`${prefix}--overflow-menu-options`,{[`${prefix}--overflow-menu--flip`]:flipped,[`${prefix}--overflow-menu-options--open`]:open,[`${prefix}--overflow-menu-options--light`]:light,[`${prefix}--overflow-menu-options--${size}`]:size}),overflowMenuIconClasses=classnames_default()(`${prefix}--overflow-menu__icon`,iconClass),childrenWithProps=react.Children.toArray(children).map(((child,index)=>{if((0,react.isValidElement)(child)){const childElement=child;return(0,react.cloneElement)(childElement,{closeMenu:childElement.props.closeMenu||closeMenuAndFocus,handleOverflowMenuItemFocus,ref:el=>{menuItemRefs.current[index]=el},index})}return null})),menuBody=react.createElement("ul",{className:overflowMenuOptionsClasses,tabIndex:-1,role:"menu","aria-label":ariaLabel||deprecatedAriaLabel,onKeyDown:evt=>{open&&(0,match.c)(evt,[keys.Do,keys.Qp,keys.yd,keys.nk])&&evt.preventDefault(),(0,match.c)(evt,[keys.uf])&&(closeMenuOnEscape(),evt.stopPropagation())},id:menuBodyId},childrenWithProps),wrappedMenuBody=react.createElement(FloatingMenu,{focusTrap,triggerRef,menuDirection:direction,menuOffset:flipped?menuOffsetFlip:menuOffset,menuRef:menuBody=>{menuBody||(menuBodyRef.current=menuBody),!menuBody&&hFocusIn.current&&(hFocusIn.current=hFocusIn.current.release())},flipped,target:()=>{const triggerEl=triggerRef.current;return triggerEl instanceof Element&&triggerEl.closest("[data-floating-menu-container]")||document.body},onPlace:menuBody=>{if(!menuBody)return;menuBodyRef.current=menuBody;const hasFocusin="onfocusin"in window,focusinEventName=hasFocusin?"focusin":"focus";hFocusIn.current=((target,...args)=>(target.addEventListener(...args),{release:()=>(target.removeEventListener(...args),null)}))(menuBody.ownerDocument,focusinEventName,(event=>{const target=event.target,triggerEl=triggerRef.current;"function"==typeof target.matches&&(menuBody.contains(target)||!triggerEl||target.matches(`.${prefix}--overflow-menu:first-child, .${prefix}--overflow-menu-options:first-child`)||closeMenuAndFocus())}),!hasFocusin)},selectorPrimaryFocus},(0,react.cloneElement)(menuBody,{"data-floating-menu-direction":direction})),combinedRef=innerRef?(0,mergeRefs.A)(triggerRef,innerRef,ref):(0,mergeRefs.A)(triggerRef,ref);return react.createElement(react.Fragment,null,react.createElement("span",{className:`${prefix}--overflow-menu__wrapper`,"aria-owns":open?menuBodyId:void 0,ref:wrapperRef},react.createElement(IconButton.K,_extends({},other,{align,type:"button","aria-haspopup":!0,"aria-expanded":open,"aria-controls":open?menuBodyId:void 0,className:overflowMenuClasses,onClick:evt=>{setClick(!0),menuBodyRef.current&&menuBodyRef.current.contains(evt.target)||(setOpen((prev=>!prev)),onClick(evt))},id,ref:combinedRef,size,label:iconDescription,kind:"ghost"}),react.createElement(IconElement,{className:overflowMenuIconClasses,"aria-label":iconDescription})),open&&hasMountedTrigger&&wrappedMenuBody))}));OverflowMenu.propTypes={align:(0,deprecateValuesWithin.A)(prop_types_default().oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top","top-start","top-end","bottom-start","bottom-end","left-end","left-start","right-end","right-start"]),["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"],mapPopoverAlign.F),"aria-label":prop_types_default().string,ariaLabel:(0,deprecate.C)(prop_types_default().string,"This prop syntax has been deprecated. Please use the new `aria-label`."),children:prop_types_default().node,className:prop_types_default().string,direction:prop_types_default().oneOf(["top","bottom"]),flipped:prop_types_default().bool,focusTrap:prop_types_default().bool,iconClass:prop_types_default().string,iconDescription:prop_types_default().string,id:prop_types_default().string,light:(0,deprecate.C)(prop_types_default().bool,"The `light` prop for `OverflowMenu` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead."),menuOffset:prop_types_default().oneOfType([prop_types_default().shape({top:prop_types_default().number.isRequired,left:prop_types_default().number.isRequired}),prop_types_default().func]),menuOffsetFlip:prop_types_default().oneOfType([prop_types_default().shape({top:prop_types_default().number.isRequired,left:prop_types_default().number.isRequired}),prop_types_default().func]),menuOptionsClass:prop_types_default().string,onClick:prop_types_default().func,onClose:prop_types_default().func,onFocus:prop_types_default().func,onKeyDown:prop_types_default().func,onOpen:prop_types_default().func,open:prop_types_default().bool,renderIcon:prop_types_default().oneOfType([prop_types_default().func,prop_types_default().object]),selectorPrimaryFocus:prop_types_default().string,size:prop_types_default().oneOf(["sm","md","lg"])};const OverflowMenu_OverflowMenu=OverflowMenu;OverflowMenu.__docgenInfo={description:"",methods:[],displayName:"OverflowMenu",props:{"aria-label":{required:!1,tsType:{name:"string"},description:"Specify a label to be read by screen readers on the container node",defaultValue:{value:"null",computed:!1},type:{name:"string"}},ariaLabel:{required:!1,tsType:{name:"string"},description:"Specify a label to be read by screen readers on the container note.\n\n@deprecated - Use `aria-label` instead.",type:{name:"custom",raw:"deprecate(\n  PropTypes.string,\n  'This prop syntax has been deprecated. Please use the new `aria-label`.'\n)"}},children:{required:!1,tsType:{name:"ReactNode"},description:"The child nodes.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"The CSS class names.",type:{name:"string"}},direction:{required:!1,tsType:{name:"union",raw:"| typeof DIRECTION_LEFT\n| typeof DIRECTION_TOP\n| typeof DIRECTION_RIGHT\n| typeof DIRECTION_BOTTOM",elements:[{name:"DIRECTION_LEFT"},{name:"DIRECTION_TOP"},{name:"DIRECTION_RIGHT"},{name:"DIRECTION_BOTTOM"}]},description:"The menu direction.",defaultValue:{value:"'bottom'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]}},flipped:{required:!1,tsType:{name:"boolean"},description:"`true` if the menu alignment should be flipped.",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},focusTrap:{required:!1,tsType:{name:"boolean"},description:"Enable or disable focus trap behavior",defaultValue:{value:"true",computed:!1},type:{name:"bool"}},iconClass:{required:!1,tsType:{name:"string"},description:"The CSS class for the icon.",type:{name:"string"}},id:{required:!1,tsType:{name:"string"},description:"The element ID.",type:{name:"string"}},iconDescription:{required:!1,tsType:{name:"string"},description:"The icon description.",defaultValue:{value:"'Options'",computed:!1},type:{name:"string"}},light:{required:!1,tsType:{name:"boolean"},description:"`true` to use the light version. For use on $ui-01 backgrounds only.\nDon't use this to make OverflowMenu background color same as container background color.",type:{name:"custom",raw:"deprecate(\n  PropTypes.bool,\n  'The `light` prop for `OverflowMenu` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'\n)"}},menuOffset:{required:!1,tsType:{name:"union",raw:"| Offset\n| ((\n    menuBody: HTMLElement,\n    menuDirection: MenuDirection,\n    triggerEl?: HTMLElement | null,\n    flipped?: boolean\n  ) => Offset)",elements:[{name:"Offset"},{name:"unknown"}]},description:"The adjustment in position applied to the floating menu.",defaultValue:{value:"(\n  menuBody,\n  direction,\n  trigger,\n  flip\n) => {\n  const triggerButtonPositionProp = triggerButtonPositionProps[direction];\n  const triggerButtonPositionFactor = triggerButtonPositionFactors[direction];\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      triggerButtonPositionProp && triggerButtonPositionFactor,\n      '[OverflowMenu] wrong floating menu direction: `%s`',\n      direction\n    );\n  }\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menuBody;\n\n  switch (triggerButtonPositionProp) {\n    case 'top':\n    case 'bottom': {\n      // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n      const triggerWidth = !trigger ? 0 : trigger.offsetWidth;\n      return {\n        left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),\n        top: 0,\n      };\n    }\n    default:\n      return { left: 0, top: 0 };\n  }\n}",computed:!1},type:{name:"union",value:[{name:"shape",value:{top:{name:"number",required:!0},left:{name:"number",required:!0}}},{name:"func"}]}},menuOffsetFlip:{required:!1,tsType:{name:"union",raw:"| Offset\n| ((\n    menuBody: HTMLElement,\n    menuDirection: MenuDirection,\n    triggerEl?: HTMLElement | null,\n    flipped?: boolean\n  ) => Offset)",elements:[{name:"Offset"},{name:"unknown"}]},description:"The adjustment in position applied to the floating menu.",defaultValue:{value:"(\n  menuBody,\n  direction,\n  trigger,\n  flip\n) => {\n  const triggerButtonPositionProp = triggerButtonPositionProps[direction];\n  const triggerButtonPositionFactor = triggerButtonPositionFactors[direction];\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      triggerButtonPositionProp && triggerButtonPositionFactor,\n      '[OverflowMenu] wrong floating menu direction: `%s`',\n      direction\n    );\n  }\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menuBody;\n\n  switch (triggerButtonPositionProp) {\n    case 'top':\n    case 'bottom': {\n      // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n      const triggerWidth = !trigger ? 0 : trigger.offsetWidth;\n      return {\n        left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),\n        top: 0,\n      };\n    }\n    default:\n      return { left: 0, top: 0 };\n  }\n}",computed:!1},type:{name:"union",value:[{name:"shape",value:{top:{name:"number",required:!0},left:{name:"number",required:!0}}},{name:"func"}]}},menuOptionsClass:{required:!1,tsType:{name:"string"},description:"The class to apply to the menu options",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(evt?) => void",signature:{arguments:[{name:"evt"}],return:{name:"void"}}},description:"The event handler for the `click` event.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function called when menu is closed",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function called when menu is opened",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"`true` if the menu should be open.",type:{name:"bool"}},renderIcon:{required:!1,tsType:{name:"ElementType"},description:"A component used to render an icon.",defaultValue:{value:"OverflowMenuVertical",computed:!0},type:{name:"union",value:[{name:"func"},{name:"object"}]}},selectorPrimaryFocus:{required:!1,tsType:{name:"string"},description:"Specify a CSS selector that matches the DOM element that should\nbe focused when the OverflowMenu opens",defaultValue:{value:"'[data-floating-menu-primary-focus]'",computed:!1},type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Specify the size of the OverflowMenu. Currently supports either `sm`, `md` (default) or `lg` as an option.",defaultValue:{value:"'md'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},innerRef:{required:!1,tsType:{name:"Ref",elements:[{name:"any"}],raw:"Ref<any>"},description:"The ref to the overflow menu's trigger button element.\n@deprecated Use the standard React `ref` prop instead."},align:{description:"Specify how the trigger should align with the tooltip",type:{name:"custom",raw:"deprecateValuesWithin(\n  PropTypes.oneOf([\n    'top',\n    'top-left', // deprecated use top-start instead\n    'top-right', // deprecated use top-end instead\n\n    'bottom',\n    'bottom-left', // deprecated use bottom-start instead\n    'bottom-right', // deprecated use bottom-end instead\n\n    'left',\n    'left-bottom', // deprecated use left-end instead\n    'left-top', // deprecated use left-start instead\n\n    'right',\n    'right-bottom', // deprecated use right-end instead\n    'right-top', // deprecated use right-start instead\n\n    // new values to match floating-ui\n    'top-start',\n    'top-end',\n    'bottom-start',\n    'bottom-end',\n    'left-end',\n    'left-start',\n    'right-end',\n    'right-start',\n  ]),\n  [\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'left',\n    'left-start',\n    'left-end',\n    'right',\n    'right-start',\n    'right-end',\n  ],\n  mapPopoverAlign\n)"},required:!1},onFocus:{description:"The event handler for the `focus` event.",type:{name:"func"},required:!1},onKeyDown:{description:"The event handler for the `keydown` event.",type:{name:"func"},required:!1}},composes:["Omit"]}},"./src/components/OverflowMenu/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>components_OverflowMenu_OverflowMenu,A:()=>components_OverflowMenu});var react=__webpack_require__("../../node_modules/react/index.js"),FeatureFlags=__webpack_require__("./src/components/FeatureFlags/index.tsx"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),bucket_13=__webpack_require__("../icons-react/es/generated/bucket-13.js"),floating_ui_react=__webpack_require__("../../node_modules/@floating-ui/react/dist/floating-ui.react.mjs"),floating_ui_react_dom=__webpack_require__("../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"),floating_ui_dom=__webpack_require__("../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"),IconButton=__webpack_require__("./src/components/IconButton/index.tsx"),Menu=__webpack_require__("./src/components/Menu/Menu.tsx"),mergeRefs=__webpack_require__("./src/tools/mergeRefs.js"),useId=__webpack_require__("./src/internal/useId.js"),usePrefix=__webpack_require__("./src/internal/usePrefix.ts"),useAttachedMenu=__webpack_require__("./src/internal/useAttachedMenu.ts"),deprecateValuesWithin=__webpack_require__("./src/prop-types/deprecateValuesWithin.js"),mapPopoverAlign=__webpack_require__("./src/tools/mapPopoverAlign.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const OverflowMenu=react.forwardRef((function OverflowMenu({autoAlign=!1,children,className,label="Options",renderIcon:IconElement=bucket_13.CH,size="md",menuAlignment="bottom-start",tooltipAlignment,menuTarget,...rest},forwardRef){const enableFloatingStyles=(0,FeatureFlags.u)("enable-v12-dynamic-floating-styles")||autoAlign,{refs,floatingStyles,placement,middlewareData}=(0,floating_ui_react.we)(enableFloatingStyles?{placement:menuAlignment,strategy:"fixed",middleware:[autoAlign&&(0,floating_ui_react_dom.UU)({fallbackPlacements:menuAlignment.includes("bottom")?["bottom-start","bottom-end","top-start","top-end"]:["top-start","top-end","bottom-start","bottom-end"]})],whileElementsMounted:floating_ui_dom.ll}:{}),id=(0,useId.Bi)("overflowmenu"),prefix=(0,usePrefix.M)(),triggerRef=(0,react.useRef)(null),{open,x,y,handleClick:hookOnClick,handleMousedown,handleClose}=(0,useAttachedMenu.F)(triggerRef);(0,react.useEffect)((()=>{enableFloatingStyles&&Object.keys(floatingStyles).forEach((style=>{refs.floating.current&&(refs.floating.current.style[style]=floatingStyles[style])}))}),[floatingStyles,enableFloatingStyles,refs.floating,open,placement,middlewareData]);const containerClasses=classnames_default()(className,`${prefix}--overflow-menu__container`,{[`${prefix}--autoalign`]:enableFloatingStyles}),menuClasses=classnames_default()(`${prefix}--overflow-menu__${menuAlignment}`),triggerClasses=classnames_default()(`${prefix}--overflow-menu`,{[`${prefix}--overflow-menu--open`]:open},"md"!==size&&`${prefix}--overflow-menu--${size}`),floatingRef=(0,mergeRefs.A)(triggerRef,refs.setReference);return react.createElement("div",_extends({},rest,{className:containerClasses,"aria-owns":open?id:void 0,ref:forwardRef}),react.createElement(IconButton.K,{"aria-controls":open?id:void 0,"aria-haspopup":!0,"aria-expanded":open,className:triggerClasses,onClick:function handleTriggerClick(){triggerRef.current&&hookOnClick()},onMouseDown:handleMousedown,ref:floatingRef,label,align:tooltipAlignment,kind:"ghost"},react.createElement(IconElement,{className:`${prefix}--overflow-menu__icon`})),react.createElement(Menu.W,{containerRef:triggerRef,ref:refs.setFloating,menuAlignment,className:menuClasses,id,size,legacyAutoalign:!enableFloatingStyles,open,onClose:handleClose,x,y,label,target:menuTarget},children))}));OverflowMenu.propTypes={autoAlign:prop_types_default().bool,children:prop_types_default().node,className:prop_types_default().string,label:prop_types_default().string,menuAlignment:prop_types_default().oneOf(["top-start","top-end","bottom-start","bottom-end"]),renderIcon:prop_types_default().oneOfType([prop_types_default().func,prop_types_default().object]),size:prop_types_default().oneOf(["sm","md","lg"]),tooltipAlignment:(0,deprecateValuesWithin.A)(prop_types_default().oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","left-bottom","left-top","right","right-bottom","right-top","top-start","top-end","bottom-start","bottom-end","left-end","left-start","right-end","right-start"]),["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"],mapPopoverAlign.F),menuTarget:prop_types_default().instanceOf("undefined"!=typeof Element?Element:Object)},OverflowMenu.__docgenInfo={description:"",methods:[],displayName:"OverflowMenu",props:{autoAlign:{required:!1,tsType:{name:"boolean"},description:"**Experimental**: Will attempt to automatically align the floating element\nto avoid collisions with the viewport and being clipped by ancestor\nelements. Requires React v17+\n@see https://github.com/carbon-design-system/carbon/issues/18714",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"A collection of MenuItems to be rendered within this OverflowMenu.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class names for the trigger button.",type:{name:"string"}},label:{required:!1,tsType:{name:"string"},description:"A label describing the options available. Is used in the trigger tooltip and as the menu's accessible label.",defaultValue:{value:"'Options'",computed:!1},type:{name:"string"}},menuAlignment:{required:!1,tsType:{name:"union",raw:"'top-start' | 'top-end' | 'bottom-start' | 'bottom-end'",elements:[{name:"literal",value:"'top-start'"},{name:"literal",value:"'top-end'"},{name:"literal",value:"'bottom-start'"},{name:"literal",value:"'bottom-end'"}]},description:"Experimental property. Specify how the menu should align with the button element",defaultValue:{value:"'bottom-start'",computed:!1},type:{name:"enum",value:[{value:"'top-start'",computed:!1},{value:"'top-end'",computed:!1},{value:"'bottom-start'",computed:!1},{value:"'bottom-end'",computed:!1}]}},renderIcon:{required:!1,tsType:{name:"ElementType"},description:"A component used to render an icon.",defaultValue:{value:"OverflowMenuVertical",computed:!0},type:{name:"union",value:[{name:"func"},{name:"object"}]}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Specify the size of the menu, from a list of available sizes.",defaultValue:{value:"'md'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"DeprecatedPopoverAlignment | NewPopoverAlignment",elements:[{name:"union",raw:"| 'top-left'\n| 'top-right'\n| 'bottom-left'\n| 'bottom-right'\n| 'left-bottom'\n| 'left-top'\n| 'right-bottom'\n| 'right-top'",elements:[{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left-bottom'"},{name:"literal",value:"'left-top'"},{name:"literal",value:"'right-bottom'"},{name:"literal",value:"'right-top'"}]},{name:"union",raw:"| 'top'\n| 'bottom'\n| 'left'\n| 'right'\n| 'top-start'\n| 'top-end'\n| 'bottom-start'\n| 'bottom-end'\n| 'left-end'\n| 'left-start'\n| 'right-end'\n| 'right-start'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"},{name:"literal",value:"'top-start'"},{name:"literal",value:"'top-end'"},{name:"literal",value:"'bottom-start'"},{name:"literal",value:"'bottom-end'"},{name:"literal",value:"'left-end'"},{name:"literal",value:"'left-start'"},{name:"literal",value:"'right-end'"},{name:"literal",value:"'right-start'"}]}]},description:"Specify how the trigger tooltip should be aligned.",type:{name:"custom",raw:"deprecateValuesWithin(\n  PropTypes.oneOf([\n    'top',\n    'top-left', // deprecated use top-start instead\n    'top-right', // deprecated use top-end instead\n\n    'bottom',\n    'bottom-left', // deprecated use bottom-start instead\n    'bottom-right', // deprecated use bottom-end instead\n\n    'left',\n    'left-bottom', // deprecated use left-end instead\n    'left-top', // deprecated use left-start instead\n\n    'right',\n    'right-bottom', // deprecated use right-end instead\n    'right-top', // deprecated use right-start instead\n\n    // new values to match floating-ui\n    'top-start',\n    'top-end',\n    'bottom-start',\n    'bottom-end',\n    'left-end',\n    'left-start',\n    'right-end',\n    'right-start',\n  ]),\n  [\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'left',\n    'left-start',\n    'left-end',\n    'right',\n    'right-start',\n    'right-end',\n  ],\n  mapPopoverAlign\n)"}},menuTarget:{required:!1,tsType:{name:"Element"},description:"Specify a DOM node where the Menu should be rendered in. Defaults to document.body.",type:{name:"instanceOf",value:"typeof Element !== 'undefined' ? Element : Object"}}}};var OverflowMenu_OverflowMenu=__webpack_require__("./src/components/OverflowMenu/OverflowMenu.tsx");function OverflowMenu_extends(){return OverflowMenu_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},OverflowMenu_extends.apply(null,arguments)}const components_OverflowMenu_OverflowMenu=(0,react.forwardRef)(((props,ref)=>(0,FeatureFlags.u)("enable-v12-overflowmenu")?react.createElement(OverflowMenu,OverflowMenu_extends({},props,{ref})):react.createElement(OverflowMenu_OverflowMenu.ob,OverflowMenu_extends({},props,{ref}))));components_OverflowMenu_OverflowMenu.displayName="OverflowMenu",components_OverflowMenu_OverflowMenu.propTypes=OverflowMenu_OverflowMenu.ob.propTypes;const components_OverflowMenu=components_OverflowMenu_OverflowMenu;components_OverflowMenu_OverflowMenu.__docgenInfo={description:"",methods:[],displayName:"OverflowMenu",props:{"aria-label":{required:!1,tsType:{name:"string"},description:"Specify a label to be read by screen readers on the container node",type:{name:"string"}},ariaLabel:{required:!1,tsType:{name:"string"},description:"Specify a label to be read by screen readers on the container note.\n\n@deprecated - Use `aria-label` instead.",type:{name:"custom",raw:"deprecate(\n  PropTypes.string,\n  'This prop syntax has been deprecated. Please use the new `aria-label`.'\n)"}},children:{required:!1,tsType:{name:"ReactNode"},description:"The child nodes.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"The CSS class names.",type:{name:"string"}},direction:{required:!1,tsType:{name:"union",raw:"| typeof DIRECTION_LEFT\n| typeof DIRECTION_TOP\n| typeof DIRECTION_RIGHT\n| typeof DIRECTION_BOTTOM",elements:[{name:"DIRECTION_LEFT"},{name:"DIRECTION_TOP"},{name:"DIRECTION_RIGHT"},{name:"DIRECTION_BOTTOM"}]},description:"The menu direction.",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]}},flipped:{required:!1,tsType:{name:"boolean"},description:"`true` if the menu alignment should be flipped.",type:{name:"bool"}},focusTrap:{required:!1,tsType:{name:"boolean"},description:"Enable or disable focus trap behavior",type:{name:"bool"}},iconClass:{required:!1,tsType:{name:"string"},description:"The CSS class for the icon.",type:{name:"string"}},id:{required:!1,tsType:{name:"string"},description:"The element ID.",type:{name:"string"}},iconDescription:{required:!1,tsType:{name:"string"},description:"The icon description.",type:{name:"string"}},light:{required:!1,tsType:{name:"boolean"},description:"`true` to use the light version. For use on $ui-01 backgrounds only.\nDon't use this to make OverflowMenu background color same as container background color.",type:{name:"custom",raw:"deprecate(\n  PropTypes.bool,\n  'The `light` prop for `OverflowMenu` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'\n)"}},menuOffset:{required:!1,tsType:{name:"union",raw:"| Offset\n| ((\n    menuBody: HTMLElement,\n    menuDirection: MenuDirection,\n    triggerEl?: HTMLElement | null,\n    flipped?: boolean\n  ) => Offset)",elements:[{name:"Offset"},{name:"unknown"}]},description:"The adjustment in position applied to the floating menu.",type:{name:"union",value:[{name:"shape",value:{top:{name:"number",required:!0},left:{name:"number",required:!0}}},{name:"func"}]}},menuOffsetFlip:{required:!1,tsType:{name:"union",raw:"| Offset\n| ((\n    menuBody: HTMLElement,\n    menuDirection: MenuDirection,\n    triggerEl?: HTMLElement | null,\n    flipped?: boolean\n  ) => Offset)",elements:[{name:"Offset"},{name:"unknown"}]},description:"The adjustment in position applied to the floating menu.",type:{name:"union",value:[{name:"shape",value:{top:{name:"number",required:!0},left:{name:"number",required:!0}}},{name:"func"}]}},menuOptionsClass:{required:!1,tsType:{name:"string"},description:"The class to apply to the menu options",type:{name:"string"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(evt?) => void",signature:{arguments:[{name:"evt"}],return:{name:"void"}}},description:"The event handler for the `click` event.",type:{name:"func"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function called when menu is closed",type:{name:"func"}},onOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Function called when menu is opened",type:{name:"func"}},open:{required:!1,tsType:{name:"boolean"},description:"`true` if the menu should be open.",type:{name:"bool"}},renderIcon:{required:!1,tsType:{name:"ElementType"},description:"A component used to render an icon.",type:{name:"union",value:[{name:"func"},{name:"object"}]}},selectorPrimaryFocus:{required:!1,tsType:{name:"string"},description:"Specify a CSS selector that matches the DOM element that should\nbe focused when the OverflowMenu opens",type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Specify the size of the OverflowMenu. Currently supports either `sm`, `md` (default) or `lg` as an option.",type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},innerRef:{required:!1,tsType:{name:"Ref",elements:[{name:"any"}],raw:"Ref<any>"},description:"The ref to the overflow menu's trigger button element.\n@deprecated Use the standard React `ref` prop instead."},align:{description:"Specify how the trigger should align with the tooltip",type:{name:"custom",raw:"deprecateValuesWithin(\n  PropTypes.oneOf([\n    'top',\n    'top-left', // deprecated use top-start instead\n    'top-right', // deprecated use top-end instead\n\n    'bottom',\n    'bottom-left', // deprecated use bottom-start instead\n    'bottom-right', // deprecated use bottom-end instead\n\n    'left',\n    'left-bottom', // deprecated use left-end instead\n    'left-top', // deprecated use left-start instead\n\n    'right',\n    'right-bottom', // deprecated use right-end instead\n    'right-top', // deprecated use right-start instead\n\n    // new values to match floating-ui\n    'top-start',\n    'top-end',\n    'bottom-start',\n    'bottom-end',\n    'left-end',\n    'left-start',\n    'right-end',\n    'right-start',\n  ]),\n  [\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'left',\n    'left-start',\n    'left-end',\n    'right',\n    'right-start',\n    'right-end',\n  ],\n  mapPopoverAlign\n)"},required:!1},onFocus:{description:"The event handler for the `focus` event.",type:{name:"func"},required:!1},onKeyDown:{description:"The event handler for the `keydown` event.",type:{name:"func"},required:!1}},composes:["Omit"]}},"./src/internal/keyboard/navigation.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bx:()=>selectorTabbable,Id:()=>selectorFocusable,g0:()=>getNextIndex});var _keys__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/internal/keyboard/keys.ts"),_match__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/internal/keyboard/match.ts");const getNextIndex=(key,index,arrayLength)=>(0,_match__WEBPACK_IMPORTED_MODULE_0__.Y)(key,_keys__WEBPACK_IMPORTED_MODULE_1__.Qp)?(index+1)%arrayLength:(0,_match__WEBPACK_IMPORTED_MODULE_0__.Y)(key,_keys__WEBPACK_IMPORTED_MODULE_1__.nk)?(index+arrayLength-1)%arrayLength:void 0,selectorTabbable="\n  a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n  button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n  textarea:not([disabled]):not([tabindex='-1']),\n  iframe, object, embed, *[tabindex]:not([tabindex='-1']):not([disabled]), *[contenteditable=true]\n",selectorFocusable="\n  a[href], area[href], input:not([disabled]),\n  button:not([disabled]),select:not([disabled]),\n  textarea:not([disabled]),\n  iframe, object, embed, *[tabindex]:not([disabled]), *[contenteditable=true]\n"},"./src/internal/useAttachedMenu.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>useAttachedMenu});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");function useAttachedMenu(anchor){const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[position,setPosition]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([[-1,-1],[-1,-1]]);function closeMenu(){setOpen(!1)}return{open,x:position[0],y:position[1],handleClick:function handleClick(){open?closeMenu():function openMenu(){const anchorEl=anchor?.current||anchor;if(anchorEl){const{left,top,right,bottom}=anchorEl.getBoundingClientRect();setPosition([[left,right],[top,bottom]])}setOpen(!0)}()},handleMousedown:function handleMousedown(e){e.preventDefault()},handleClose:closeMenu}}},"./src/internal/useOutsideClick.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>useOutsideClick});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_environment__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/internal/environment.ts"),_useEvent__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/useEvent.ts");const useOutsideClick=(ref,callback)=>{const savedCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{savedCallback.current=callback}),[callback]),_environment__WEBPACK_IMPORTED_MODULE_1__.S&&(0,_useEvent__WEBPACK_IMPORTED_MODULE_2__.M)("click",(event=>{const{target}=event;target instanceof Node&&ref.current&&!ref.current.contains(target)&&savedCallback.current(event)}))}},"./src/internal/wrapFocus.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{MG:()=>wrapFocusWithoutSentinels,Vp:()=>wrapFocus,jo:()=>elementOrParentIsFloatingMenu});var tabbable__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/tabbable/dist/index.esm.js"),_keyboard_navigation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/internal/keyboard/navigation.ts");const DOCUMENT_POSITION_BROAD_PRECEDING="undefined"!=typeof Node?Node.DOCUMENT_POSITION_PRECEDING|Node.DOCUMENT_POSITION_CONTAINS:0,DOCUMENT_POSITION_BROAD_FOLLOWING="undefined"!=typeof Node?Node.DOCUMENT_POSITION_FOLLOWING|Node.DOCUMENT_POSITION_CONTAINED_BY:0,elementOrParentIsFloatingMenu=(node,selectorsFloatingMenus=[])=>{if(node instanceof Element&&"function"==typeof node.closest){return[".cds--overflow-menu-options",".cds--tooltip",".flatpickr-calendar",...selectorsFloatingMenus].some((selector=>!!node.closest(selector)))}return!1},wrapFocus=({bodyNode,startTrapNode,endTrapNode,currentActiveNode,oldActiveNode,selectorsFloatingMenus})=>{if(bodyNode&&currentActiveNode&&oldActiveNode&&!bodyNode.contains(currentActiveNode)&&!elementOrParentIsFloatingMenu(currentActiveNode,selectorsFloatingMenus)){const comparisonResult=oldActiveNode.compareDocumentPosition(currentActiveNode);if(currentActiveNode===startTrapNode||comparisonResult&DOCUMENT_POSITION_BROAD_PRECEDING){const tabbableElement=Array.from(bodyNode.querySelectorAll(_keyboard_navigation__WEBPACK_IMPORTED_MODULE_0__.Bx)).reverse().find((({offsetParent})=>Boolean(offsetParent)));tabbableElement?tabbableElement.focus():bodyNode!==oldActiveNode&&bodyNode.focus()}else if(currentActiveNode===endTrapNode||comparisonResult&DOCUMENT_POSITION_BROAD_FOLLOWING){const tabbableElement=Array.from(bodyNode.querySelectorAll(_keyboard_navigation__WEBPACK_IMPORTED_MODULE_0__.Bx)).find((({offsetParent})=>Boolean(offsetParent)));tabbableElement?tabbableElement.focus():bodyNode!==oldActiveNode&&bodyNode.focus()}}},wrapFocusWithoutSentinels=({containerNode,currentActiveNode,event})=>{if(!containerNode)return;["blur","focusout","focusin","focus"].includes(event.type);const tabbables=(0,tabbable__WEBPACK_IMPORTED_MODULE_1__.Kr)(containerNode),firstTabbable=tabbables[0],lastTabbable=tabbables[tabbables.length-1];currentActiveNode!==lastTabbable||event.shiftKey||(event.preventDefault(),firstTabbable.focus()),currentActiveNode===firstTabbable&&event.shiftKey&&(event.preventDefault(),lastTabbable.focus())}},"./src/tools/mergeRefs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=(...refs)=>el=>{refs.forEach((ref=>{"function"==typeof ref?ref(el):Object(ref)===ref&&(ref.current=el)}))}}}]);