"use strict";(self.webpackChunk_carbon_react=self.webpackChunk_carbon_react||[]).push([[3377],{"./src/components/FluidSelect/FluidSelect.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Select__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Select/index.ts"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts"),_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FluidForm/FormContext.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidSelect=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function FluidSelect({className,children,...other},ref){const prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),classNames=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--select--fluid`,className);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__.c.Provider,{value:{isFluid:!0}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Select__WEBPACK_IMPORTED_MODULE_4__.Ay,_extends({ref,className:classNames},other),children))}));FluidSelect.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,className:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,defaultValue:prop_types__WEBPACK_IMPORTED_MODULE_5___default().any,disabled:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,id:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string.isRequired,invalid:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,labelText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,onChange:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func,warn:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool};const __WEBPACK_DEFAULT_EXPORT__=FluidSelect;FluidSelect.__docgenInfo={description:"",methods:[],displayName:"FluidSelect",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the contents of your Select",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the node containing the label and the select box",type:{name:"string"}},defaultValue:{required:!1,tsType:{name:"any"},description:"Optionally provide the default value of the `<select>`",type:{name:"any"}},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is disabled",type:{name:"bool"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom `id` for the `<select>`",type:{name:"string"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify if the currently value is invalid.",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Message which is displayed if the value is invalid.",type:{name:"node"}},labelText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide label text to be read by screen readers when interacting with the\ncontrol",type:{name:"node"}},onChange:{required:!1,tsType:{name:"ReactChangeEventHandler",raw:"React.ChangeEventHandler<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}]},description:"Provide an optional `onChange` hook that is called each time the value of\nthe underlying `<input>` changes",type:{name:"func"}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether or not the component is readonly",type:{name:"bool"}}}}},"./src/components/FluidSelect/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/FluidSelect/FluidSelect.tsx").A},"./src/components/FluidTextInput/FluidTextInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var prop_types__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_TextInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/TextInput/index.ts"),_PasswordInput__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/TextInput/PasswordInput.tsx"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts"),_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FluidForm/FormContext.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidTextInput=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function FluidTextInput({className,isPassword,...other},ref){const prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),classNames=classnames__WEBPACK_IMPORTED_MODULE_1___default()(className,{[`${prefix}--text-input--fluid`]:!isPassword});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FluidForm_FormContext__WEBPACK_IMPORTED_MODULE_3__.c.Provider,{value:{isFluid:!0}},isPassword?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PasswordInput__WEBPACK_IMPORTED_MODULE_4__.A,_extends({className:classNames,ref},other)):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.Ay,_extends({className:classNames,ref},other)))}));FluidTextInput.propTypes={className:prop_types__WEBPACK_IMPORTED_MODULE_6___default().string,defaultValue:prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default().string,prop_types__WEBPACK_IMPORTED_MODULE_6___default().number]),disabled:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,id:prop_types__WEBPACK_IMPORTED_MODULE_6___default().string.isRequired,invalid:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_6___default().node,isPassword:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,maxCount:prop_types__WEBPACK_IMPORTED_MODULE_6___default().number,enableCounter:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,labelText:prop_types__WEBPACK_IMPORTED_MODULE_6___default().node.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_6___default().func,onClick:prop_types__WEBPACK_IMPORTED_MODULE_6___default().func,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_6___default().string,value:prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default().string,prop_types__WEBPACK_IMPORTED_MODULE_6___default().number]),warn:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_6___default().node,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool};const __WEBPACK_DEFAULT_EXPORT__=FluidTextInput;FluidTextInput.__docgenInfo={description:"",methods:[],displayName:"FluidTextInput",props:{className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the outer FluidForm wrapper",type:{name:"string"}},defaultValue:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Optionally provide the default value of the `<input>`",type:{name:"union",value:[{name:"string"},{name:"number"}]}},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the `<input>` should be disabled",type:{name:"bool"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom `id` for the `<input>`",type:{name:"string"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in an invalid state",type:{name:"node"}},isPassword:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is a password input",type:{name:"bool"}},maxCount:{required:!1,tsType:{name:"number"},description:"Max character count allowed for the textInput. This is needed in order for enableCounter to display",type:{name:"number"}},enableCounter:{required:!1,tsType:{name:"boolean"},description:"Specify whether to display the character counter",type:{name:"bool"}},labelText:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that will be read by a screen reader when visiting this\ncontrol",type:{name:"node"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"event"}],return:{name:"void"}}},description:"Optionally provide an `onChange` handler that is called whenever `<input>`\nis updated",type:{name:"func"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLElement>",elements:[{name:"HTMLElement"}]},name:"event"}],return:{name:"void"}}},description:"Optionally provide an `onClick` handler that is called whenever the\n`<input>` is clicked",type:{name:"func"}},placeholder:{required:!1,tsType:{name:"string"},description:"Specify the placeholder attribute for the `<input>`",type:{name:"string"}},value:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Specify the value of the `<input>`",type:{name:"union",value:[{name:"string"},{name:"number"}]}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether or not the component is readonly",type:{name:"bool"}}}}},"./src/components/FluidTextInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/FluidTextInput/FluidTextInput.tsx").A},"./src/components/FluidTimePicker/FluidTimePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_FluidTextInput__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FluidTextInput/index.tsx"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts"),_carbon_icons_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../icons-react/es/generated/bucket-19.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidTimePicker=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function FluidTimePicker({className,children,disabled,invalid,invalidText,warn,warnText,readOnly,...other},ref){const prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),classNames=classnames__WEBPACK_IMPORTED_MODULE_1___default()(className,{[`${prefix}--time-picker--fluid`]:!0,[`${prefix}--time-picker--equal-width`]:2!==react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).length,[`${prefix}--time-picker--fluid--disabled`]:disabled,[`${prefix}--time-picker--fluid--invalid`]:invalid,[`${prefix}--time-picker--fluid--warning`]:warn}),error=invalid||warn;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classNames},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`${prefix}--time-picker--fluid__wrapper`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`${prefix}--time-picker__input`},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FluidTextInput__WEBPACK_IMPORTED_MODULE_3__.Ay,_extends({ref,readOnly,disabled},other))),disabled?react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).map((child=>react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child,{disabled:!0}))):readOnly?react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).map((child=>react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child,{readOnly:!0}))):children),error&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("hr",{className:`${prefix}--time-picker__divider`}),error&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`${prefix}--form-requirement`},invalid?invalidText:warn?warnText:void 0),error&&invalid?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_4__.BF,{className:`${prefix}--time-picker__icon ${prefix}--time-picker__icon--invalid`}):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_4__.OR,{className:`${prefix}--time-picker__icon ${prefix}--time-picker__icon--warn`}))}));FluidTimePicker.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,className:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,disabled:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,invalid:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,labelText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node.isRequired,warn:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool};const __WEBPACK_DEFAULT_EXPORT__=FluidTimePicker;FluidTimePicker.__docgenInfo={description:"",methods:[],displayName:"FluidTimePicker",props:{className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the outer FluidForm wrapper",type:{name:"string"}},defaultValue:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Optionally provide the default value of the `<input>`"},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the `<input>` should be disabled",type:{name:"bool"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom `id` for the `<input>`"},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in an invalid state",type:{name:"node"}},isPassword:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is a password input"},maxCount:{required:!1,tsType:{name:"number"},description:"Max character count allowed for the textInput. This is needed in order for enableCounter to display"},enableCounter:{required:!1,tsType:{name:"boolean"},description:"Specify whether to display the character counter"},labelText:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that will be read by a screen reader when visiting this\ncontrol",type:{name:"node"}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"event"}],return:{name:"void"}}},description:"Optionally provide an `onChange` handler that is called whenever `<input>`\nis updated"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLElement>",elements:[{name:"HTMLElement"}]},name:"event"}],return:{name:"void"}}},description:"Optionally provide an `onClick` handler that is called whenever the\n`<input>` is clicked"},placeholder:{required:!1,tsType:{name:"string"},description:"Specify the placeholder attribute for the `<input>`"},value:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Specify the value of the `<input>`"},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether or not the component is readonly",type:{name:"bool"}},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The child node(s)",type:{name:"node"}}}}},"./src/components/FluidTimePickerSelect/FluidTimePickerSelect.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),_FluidSelect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/FluidSelect/index.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FluidTimePickerSelect=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function FluidTimePickerSelect({children,className,...other},ref){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FluidSelect__WEBPACK_IMPORTED_MODULE_1__.Ay,_extends({className,ref},other),children)}));FluidTimePickerSelect.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().node,className:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,defaultValue:prop_types__WEBPACK_IMPORTED_MODULE_2___default().any,disabled:prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool,id:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string.isRequired,labelText:prop_types__WEBPACK_IMPORTED_MODULE_2___default().node,onChange:prop_types__WEBPACK_IMPORTED_MODULE_2___default().func};const __WEBPACK_DEFAULT_EXPORT__=FluidTimePickerSelect;FluidTimePickerSelect.__docgenInfo={description:"",methods:[],displayName:"FluidTimePickerSelect",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide the contents of your Select",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Specify an optional className to be applied to the node containing the label and the select box",type:{name:"string"}},defaultValue:{required:!1,tsType:{name:"any"},description:"Optionally provide the default value of the `<select>`",type:{name:"any"}},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is disabled",type:{name:"bool"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom `id` for the `<select>`",type:{name:"string"}},labelText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Provide label text to be read by screen readers when interacting with the\ncontrol",type:{name:"node"}},onChange:{required:!1,tsType:{name:"ReactChangeEventHandler",raw:"React.ChangeEventHandler<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}]},description:"Provide an optional `onChange` hook that is called each time the value of\nthe underlying `<input>` changes",type:{name:"func"}}}}},"./src/components/TextInput/PasswordInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),prop_types__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_8__),_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../icons-react/es/generated/bucket-19.js"),_internal_useNormalizedInputProps__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/internal/useNormalizedInputProps.tsx"),_util__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/TextInput/util.js"),_FluidForm__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/FluidForm/FormContext.ts"),_Tooltip__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),_prop_types_deprecate__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/prop-types/deprecate.ts"),_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/internal/usePrefix.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const PasswordInput=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function PasswordInput({className,disabled=!1,helperText,hideLabel,hidePasswordLabel="Hide password",id,inline,invalid=!1,invalidText,labelText,light,onChange=()=>{},onClick=()=>{},onTogglePasswordVisibility,placeholder,readOnly,size="md",showPasswordLabel="Show password",tooltipPosition="bottom",tooltipAlignment="end",type="password",warn=!1,warnText,...rest},ref){const[inputType,setInputType]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(type),prefix=(0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_2__.M)(),normalizedProps=(0,_internal_useNormalizedInputProps__WEBPACK_IMPORTED_MODULE_3__.l)({id,invalid,invalidText,warn,warnText,readOnly,disabled}),{isFluid}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_FluidForm__WEBPACK_IMPORTED_MODULE_4__.c),textInputClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--text-input`,`${prefix}--password-input`,className,{[`${prefix}--text-input--light`]:light,[`${prefix}--text-input--invalid`]:normalizedProps.invalid,[`${prefix}--text-input--warning`]:normalizedProps.warn,[`${prefix}--text-input--${size}`]:size,[`${prefix}--layout--size-${size}`]:size}),sharedTextInputProps={id,onChange:evt=>{disabled||onChange(evt)},onClick:evt=>{disabled||onClick(evt)},placeholder,type:inputType,className:textInputClasses,readOnly,ref,...rest},inputWrapperClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--form-item`,`${prefix}--text-input-wrapper`,`${prefix}--password-input-wrapper`,{[`${prefix}--text-input-wrapper--readonly`]:readOnly,[`${prefix}--text-input-wrapper--light`]:light,[`${prefix}--text-input-wrapper--inline`]:inline,[`${prefix}--text-input--fluid`]:isFluid}),labelClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--label`,{[`${prefix}--visually-hidden`]:hideLabel,[`${prefix}--label--disabled`]:disabled,[`${prefix}--label--inline`]:inline,[`${prefix}--label--inline--${size}`]:inline&&!!size}),helperTextClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--form__helper-text`,{[`${prefix}--form__helper-text--disabled`]:disabled,[`${prefix}--form__helper-text--inline`]:inline}),fieldOuterWrapperClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--text-input__field-outer-wrapper`,{[`${prefix}--text-input__field-outer-wrapper--inline`]:inline}),fieldWrapperClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--text-input__field-wrapper`,{[`${prefix}--text-input__field-wrapper--warning`]:normalizedProps.warn}),iconClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()({[`${prefix}--text-input__invalid-icon`]:normalizedProps.invalid||normalizedProps.warn,[`${prefix}--text-input__invalid-icon--warning`]:normalizedProps.warn}),label=labelText?react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:id,className:labelClasses},labelText):null,helper=helperText?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{id:normalizedProps.helperId,className:helperTextClasses},helperText):null,passwordIsVisible="text"===inputType,passwordVisibilityIcon=passwordIsVisible?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__.vZ,{className:`${prefix}--icon-visibility-off`}):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__.Ss,{className:`${prefix}--icon-visibility-on`}),passwordVisibilityToggleClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()(`${prefix}--text-input--password__visibility__toggle`,`${prefix}--btn`,`${prefix}--tooltip__trigger`,`${prefix}--tooltip--a11y`,{[`${prefix}--tooltip--${tooltipPosition}`]:tooltipPosition,[`${prefix}--tooltip--align-${tooltipAlignment}`]:tooltipAlignment});let align;"top"!==tooltipPosition&&"bottom"!==tooltipPosition||("center"===tooltipAlignment&&(align=tooltipPosition),"end"===tooltipAlignment&&(align=`${tooltipPosition}-end`),"start"===tooltipAlignment&&(align=`${tooltipPosition}-start`)),"right"!==tooltipPosition&&"left"!==tooltipPosition||(align=tooltipPosition),hidePasswordLabel&&""!==hidePasswordLabel.trim()?showPasswordLabel&&""!==showPasswordLabel.trim()||console.warn('Warning: The "showPasswordLabel" should not be blank.'):console.warn('Warning: The "hidePasswordLabel" should not be blank.');const input=react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",_extends({},(0,_util__WEBPACK_IMPORTED_MODULE_6__.k)({sharedTextInputProps,invalid:normalizedProps.invalid,invalidId:normalizedProps.invalidId,warn:normalizedProps.warn,warnId:normalizedProps.warnId,hasHelper:Boolean(helperText&&!isFluid&&(inline||!inline&&!normalizedProps.validation)),helperId:normalizedProps.helperId}),{disabled,"data-toggle-password-visibility":"password"===inputType})),isFluid&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("hr",{className:`${prefix}--text-input__divider`}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_7__.m,{align,className:`${prefix}--toggle-password-tooltip`,label:passwordIsVisible?hidePasswordLabel:showPasswordLabel},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"button",className:passwordVisibilityToggleClasses,disabled:disabled||readOnly,onClick:event=>{setInputType("password"===inputType?"text":"password"),onTogglePasswordVisibility&&onTogglePasswordVisibility(event)}},passwordVisibilityIcon)));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{setInputType(type)}),[type]);const Icon=normalizedProps.icon;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:inputWrapperClasses},inline?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`${prefix}--text-input__label-helper-wrapper`},label,!isFluid&&helper):label,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:fieldOuterWrapperClasses},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:fieldWrapperClasses,"data-invalid":normalizedProps.invalid||null},Icon&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon,{className:iconClasses}),input,isFluid&&!inline&&normalizedProps.validation),!isFluid&&!inline&&(normalizedProps.validation||helper)))}));PasswordInput.displayName="PasswordInput",PasswordInput.propTypes={className:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,defaultValue:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,prop_types__WEBPACK_IMPORTED_MODULE_8___default().number]),disabled:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,helperText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,hideLabel:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,hidePasswordLabel:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,id:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string.isRequired,inline:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,invalid:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,readOnly:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,invalidText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node,labelText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node.isRequired,light:(0,_prop_types_deprecate__WEBPACK_IMPORTED_MODULE_9__.C)(prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,"The `light` prop for `PasswordInput` has been deprecated in favor of the new `Layer` component. It will be removed in the next major release."),onChange:prop_types__WEBPACK_IMPORTED_MODULE_8___default().func,onClick:prop_types__WEBPACK_IMPORTED_MODULE_8___default().func,onTogglePasswordVisibility:prop_types__WEBPACK_IMPORTED_MODULE_8___default().func,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,showPasswordLabel:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,size:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["sm","md","lg"]),tooltipAlignment:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["start","center","end"]),tooltipPosition:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["top","right","bottom","left"]),type:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOf(["password","text"]),value:prop_types__WEBPACK_IMPORTED_MODULE_8___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,prop_types__WEBPACK_IMPORTED_MODULE_8___default().number]),warn:prop_types__WEBPACK_IMPORTED_MODULE_8___default().bool,warnText:prop_types__WEBPACK_IMPORTED_MODULE_8___default().node};const __WEBPACK_DEFAULT_EXPORT__=PasswordInput;PasswordInput.__docgenInfo={description:"",methods:[],displayName:"PasswordInput",props:{className:{required:!1,tsType:{name:"string"},description:"Provide a custom className that is applied directly to the underlying `<input>` node",type:{name:"string"}},defaultValue:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Optionally provide the default value of the `<input>`",type:{name:"union",value:[{name:"string"},{name:"number"}]}},disabled:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is disabled",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},enableCounter:{required:!1,tsType:{name:"boolean"},description:"Specify whether to display the character counter"},helperText:{required:!1,tsType:{name:"ReactNode"},description:"Provide text that is used alongside the control label for additional help",type:{name:"node"}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Specify whether or not the underlying label is visually hidden",type:{name:"bool"}},hidePasswordLabel:{required:!1,tsType:{name:"string"},description:'"Hide password" tooltip text on password visibility toggle',defaultValue:{value:"'Hide password'",computed:!1},type:{name:"string"}},id:{required:!0,tsType:{name:"string"},description:"Provide a unique identifier for the input field",type:{name:"string"}},inline:{required:!1,tsType:{name:"boolean"},description:"`true` to use the inline version",type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently invalid",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"ReactNode"},description:"Provide the text that is displayed when the control is in an invalid state",type:{name:"node"}},labelText:{required:!0,tsType:{name:"ReactNode"},description:"Provide the text that will be read by a screen reader when visiting this control",type:{name:"node"}},light:{required:!1,tsType:{name:"boolean"},description:"@deprecated The `light` prop for `PasswordInput` has been deprecated in favor of the new `Layer` component. It will be removed in the next major release.\n`true` to use the light version. For use on $ui-01 backgrounds only.\nDon't use this to make tile background color same as container background color.",type:{name:"custom",raw:"deprecate(\n  PropTypes.bool,\n  'The `light` prop for `PasswordInput` has ' +\n    'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'\n)"}},maxCount:{required:!1,tsType:{name:"number"},description:"Max character count allowed for the input. This is needed in order for enableCounter to display"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(evt: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"evt"}],return:{name:"void"}}},description:"Optionally provide an `onChange` handler that is called whenever `<input>` is updated\n@param evt Change event triggered by `<input>`\n@returns {void}",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(evt: React.MouseEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"evt"}],return:{name:"void"}}},description:"Optionally provide an `onClick` handler that is called whenever the `<input>` is returned\n@param evt Mouse event triggered by `<input>`\n@returns {void}",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},onTogglePasswordVisibility:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  evt: React.MouseEvent<HTMLButtonElement>\n) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"evt"}],return:{name:"void"}}},description:"Callback function that is called whenever the toggle password visibility button is clicked\n@param evt Mouse event triggered by the password visibility `<button>`\n@returns {void}",type:{name:"func"}},placeholder:{required:!1,tsType:{name:"string"},description:"Specify the placeholder attribute for the `<input>`",type:{name:"string"}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether the input should be read-only",type:{name:"bool"}},showPasswordLabel:{required:!1,tsType:{name:"string"},description:'"Show password" tooltip text on password visibility toggle',defaultValue:{value:"'Show password'",computed:!1},type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Specify the size of the Text Input. Supports `sm`, `md`, or `lg`.",defaultValue:{value:"'md'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"'start' | 'center' | 'end'",elements:[{name:"literal",value:"'start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'end'"}]},description:"Specify the alignment of the tooltip to the icon-only button.\nCan be one of: `start`, `center`, or `end`.",defaultValue:{value:"'end'",computed:!1},type:{name:"enum",value:[{value:"'start'",computed:!1},{value:"'center'",computed:!1},{value:"'end'",computed:!1}]}},tooltipPosition:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Specify the direction of the tooltip for the icon-only button.\nCan be either `top`, `right`, `bottom`, or `left`",defaultValue:{value:"'bottom'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]}},type:{required:!1,tsType:{name:"union",raw:"'password' | 'text'",elements:[{name:"literal",value:"'password'"},{name:"literal",value:"'text'"}]},description:"The input type, either `password` or `text`",defaultValue:{value:"'password'",computed:!1},type:{name:"enum",value:[{value:"'password'",computed:!1},{value:"'text'",computed:!1}]}},value:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Provide the current value of the `<input>`",type:{name:"union",value:[{name:"string"},{name:"number"}]}},warn:{required:!1,tsType:{name:"boolean"},description:"Specify whether the control is currently in warning state",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},warnText:{required:!1,tsType:{name:"ReactNode"},description:"Provide the text that is displayed when the control is in warning state",type:{name:"node"}}},composes:["Omit"]}}}]);